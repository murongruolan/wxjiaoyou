<?php
 goto nn5vP; F9ZGQ: define("\121\x52\x5f\x45\103\x4c\105\x56\x45\114\x5f\x4c", 0); goto uFBks; dz8z4: define("\116\61", 3); goto SIuAm; EOlNG: class QRrawcode { public $version; public $datacode = array(); public $ecccode = array(); public $blocks; public $rsblocks = array(); public $count; public $dataLength; public $eccLength; public $b1; public function __construct(QRinput $input) { goto cU1FN; yAWHL: if (!is_null($this->datacode)) { goto Cwk7m; } goto Sauzd; O0EMR: $this->count = 0; goto merBs; HjDJ2: Cwk7m: goto kbR2A; USKBu: $this->blocks = QRspec::rsBlockNum($spec); goto s0S77; ArK_M: $this->b1 = QRspec::rsBlockNum1($spec); goto qMOO6; G6d4e: snTLu: goto O0EMR; kbR2A: QRspec::getEccSpec($input->getVersion(), $input->getErrorCorrectionLevel(), $spec); goto l7Y__; cU1FN: $spec = array(0, 0, 0, 0, 0); goto XU6kM; beuei: throw new Exception("\142\x6c\157\143\153\40\x61\154\x6c\157\x63\40\145\162\x72\x6f\x72"); goto naztz; qMOO6: $this->dataLength = QRspec::rsDataLength($spec); goto PO6Xr; s0S77: $ret = $this->init($spec); goto bkPpf; l7Y__: $this->version = $input->getVersion(); goto ArK_M; Sauzd: throw new Exception("\x6e\165\154\x6c\40\151\155\x70\x75\164\40\x73\x74\162\x69\x6e\x67"); goto HjDJ2; XU6kM: $this->datacode = $input->getByteStream(); goto yAWHL; PO6Xr: $this->eccLength = QRspec::rsEccLength($spec); goto JfRVC; naztz: return null; goto G6d4e; JfRVC: $this->ecccode = array_fill(0, $this->eccLength, 0); goto USKBu; bkPpf: if (!($ret < 0)) { goto snTLu; } goto beuei; merBs: } public function init(array $spec) { goto HVtmZ; tdvZC: $i = 0; goto DlhhC; p2l4i: $dataPos += $dl; goto KmjvA; nVzMp: goto GCfGJ; goto U8OEW; IyCO9: $rs = QRrs::init_rs(8, 0x11d, 0, 1, $el, 255 - $dl - $el); goto nCxI1; da3GX: dmIXl: goto ZBOoa; vy62k: $dl = QRspec::rsDataCodes2($spec); goto DV1Bg; ZBOoa: $i = 0; goto UeyCx; fZovC: return 0; goto qETWF; dl7n4: $ecc = array_slice($this->ecccode, $eccPos); goto kQViZ; COHEf: $ecc = array_slice($this->ecccode, $eccPos); goto r0Ecp; qETWF: GOmja: goto vy62k; T8pmX: $blockNo++; goto CbiB1; BWTpg: bnQnO: goto PSfeC; U8OEW: wkAwG: goto YlIrN; KmjvA: $eccPos += $el; goto tUi_E; YHaa5: $eccPos += $el; goto T8pmX; DqkIT: $this->ecccode = array_merge(array_slice($this->ecccode, 0, $eccPos), $ecc); goto aGMni; N1HUD: return -1; goto da3GX; r8ygT: $eccPos = 0; goto tdvZC; DlhhC: GCfGJ: goto Ckdz0; RBjU3: mxE4S: goto Aqm2S; L6lrw: $dataPos = 0; goto r8ygT; Aqm2S: $i++; goto nVzMp; CbiB1: dv5g2: goto ebJwx; r0Ecp: $this->rsblocks[$blockNo] = new QRrsblock($dl, array_slice($this->datacode, $dataPos), $el, $ecc, $rs); goto VQurt; TJlVH: if (!($rs == NULL)) { goto dmIXl; } goto N1HUD; kQViZ: $this->rsblocks[$blockNo] = new QRrsblock($dl, array_slice($this->datacode, $dataPos), $el, $ecc, $rs); goto DqkIT; ebJwx: $i++; goto faGCM; l38r5: if (!($i < QRspec::rsBlockNum2($spec))) { goto bnQnO; } goto dl7n4; UeyCx: SdFOj: goto l38r5; VQurt: $this->ecccode = array_merge(array_slice($this->ecccode, 0, $eccPos), $ecc); goto p2l4i; nCxI1: $blockNo = 0; goto L6lrw; tUi_E: $blockNo++; goto RBjU3; HVtmZ: $dl = QRspec::rsDataCodes1($spec); goto OR99Q; PSfeC: return 0; goto bk4LH; DV1Bg: $el = QRspec::rsEccCodes2($spec); goto LwBzT; aGMni: $dataPos += $dl; goto YHaa5; OR99Q: $el = QRspec::rsEccCodes1($spec); goto IyCO9; YlIrN: if (!(QRspec::rsBlockNum2($spec) == 0)) { goto GOmja; } goto fZovC; LwBzT: $rs = QRrs::init_rs(8, 0x11d, 0, 1, $el, 255 - $dl - $el); goto TJlVH; faGCM: goto SdFOj; goto BWTpg; Ckdz0: if (!($i < QRspec::rsBlockNum1($spec))) { goto wkAwG; } goto COHEf; bk4LH: } public function getCode() { goto xHhr8; ZiUJw: goto S3bJk; goto VDR0D; pgKdQ: o2WIP: goto rY00w; Bl7uk: S3bJk: goto WMXf8; Uq0XR: if ($this->count < $this->dataLength + $this->eccLength) { goto tGpIP; } goto q0MIb; m2y4U: $row = ($this->count - $this->dataLength) % $this->blocks; goto TPdlO; lXXEd: STJVR: goto mliSC; mliSC: $ret = $this->rsblocks[$row]->data[$col]; goto pvlWl; bSqqv: if ($this->count < $this->dataLength) { goto o2WIP; } goto Uq0XR; xHhr8: $ret; goto bSqqv; rY00w: $row = $this->count % $this->blocks; goto eBU6k; eBU6k: $col = $this->count / $this->blocks; goto cZ_Zu; gcsBV: $ret = $this->rsblocks[$row]->ecc[$col]; goto Bl7uk; KQ0Fa: $this->count++; goto MQq_V; q0MIb: return 0; goto ZiUJw; WMXf8: goto FqW3h; goto pgKdQ; MQq_V: return $ret; goto i6dG5; TPdlO: $col = ($this->count - $this->dataLength) / $this->blocks; goto gcsBV; cwJ_E: $row += $this->b1; goto lXXEd; VDR0D: tGpIP: goto m2y4U; pvlWl: FqW3h: goto KQ0Fa; cZ_Zu: if (!($col >= $this->rsblocks[0]->dataLength)) { goto STJVR; } goto cwJ_E; i6dG5: } } goto Y4m9G; iVM_h: define("\121\122\x5f\106\111\116\x44\137\102\x45\x53\124\x5f\x4d\101\123\x4b", true); goto V3Tco; toZ3n: class QRbitstream { public $data = array(); public function size() { return count($this->data); } public function allocate($setLength) { $this->data = array_fill(0, $setLength, 0); return 0; } public static function newFromNum($bits, $num) { goto EjCOW; EjCOW: $bstream = new QRbitstream(); goto lGqUr; n7Zes: goto GgW9a; goto sZ76C; lywvT: if ($num & $mask) { goto E_IzE; } goto O0ZeC; krsne: goto RTiRV; goto iC3TA; t_moP: $mask = $mask >> 1; goto K5r2j; FH6HG: if (!($i < $bits)) { goto n3wbO; } goto lywvT; mdV3F: $mask = 1 << $bits - 1; goto nbBHG; lGqUr: $bstream->allocate($bits); goto mdV3F; O0ZeC: $bstream->data[$i] = 0; goto krsne; nnVz0: $i++; goto n7Zes; jxAqY: GgW9a: goto FH6HG; K5r2j: PYCLU: goto nnVz0; iC3TA: E_IzE: goto yCckh; yCckh: $bstream->data[$i] = 1; goto ollQ9; nbBHG: $i = 0; goto jxAqY; ollQ9: RTiRV: goto t_moP; vdlob: return $bstream; goto Cgc7z; sZ76C: n3wbO: goto vdlob; Cgc7z: } public static function newFromBytes($size, $data) { goto WcfY_; ypYTB: return $bstream; goto ESPQb; sWAXZ: $p = 0; goto rjTEx; WfZqO: $p++; goto DDiaF; vZnph: $bstream->allocate($size * 8); goto sWAXZ; QwZJg: aupub: goto WfZqO; qIzQg: goto yD35k; goto eqRJN; oiZWN: goto zCrgO; goto DAlWN; LZHgv: if (!($j < 8)) { goto au5ER; } goto YVtnI; YVtnI: if ($data[$i] & $mask) { goto UHmCR; } goto uvI1W; JSVxx: $j = 0; goto e7PEA; n61ir: yD35k: goto lBQ1f; DAlWN: au5ER: goto W0E8x; uvI1W: $bstream->data[$p] = 0; goto vc2jD; W0E8x: P3Eup: goto eBk6J; zBsqB: $mask = 0x80; goto JSVxx; r5Xf5: UHmCR: goto rpxPL; vc2jD: goto aupub; goto r5Xf5; DDiaF: $mask = $mask >> 1; goto l7N86; e7PEA: zCrgO: goto LZHgv; eqRJN: lsJwi: goto ypYTB; rpxPL: $bstream->data[$p] = 1; goto QwZJg; WcfY_: $bstream = new QRbitstream(); goto vZnph; rjsN1: $j++; goto oiZWN; rjTEx: $i = 0; goto n61ir; l7N86: InE9Y: goto rjsN1; eBk6J: $i++; goto qIzQg; lBQ1f: if (!($i < $size)) { goto lsJwi; } goto zBsqB; ESPQb: } public function append(QRbitstream $arg) { goto M8EZj; jUVbo: $this->data = array_values(array_merge($this->data, $arg->data)); goto frI8U; leD5g: VO54v: goto Va61o; Va61o: if (!($this->size() == 0)) { goto MDjll; } goto lMvd7; JC9Bs: return -1; goto p8DYa; lMvd7: $this->data = $arg->data; goto WsgO9; frI8U: return 0; goto h9UDV; zEtor: MDjll: goto jUVbo; p8DYa: WadtL: goto LMsZu; iloEV: return 0; goto leD5g; WsgO9: return 0; goto zEtor; LMsZu: if (!($arg->size() == 0)) { goto VO54v; } goto iloEV; M8EZj: if (!is_null($arg)) { goto WadtL; } goto JC9Bs; h9UDV: } public function appendNum($bits, $num) { goto tIJ_w; WW0K2: unset($b); goto ImPjw; LYtPC: if (!is_null($b)) { goto AcY2P; } goto hLpjG; tIJ_w: if (!($bits == 0)) { goto L3Zsd; } goto XukEY; ak4h_: $ret = $this->append($b); goto WW0K2; aTXA_: AcY2P: goto ak4h_; G1dwJ: L3Zsd: goto EDLZb; ImPjw: return $ret; goto GJLmG; hLpjG: return -1; goto aTXA_; EDLZb: $b = QRbitstream::newFromNum($bits, $num); goto LYtPC; XukEY: return 0; goto G1dwJ; GJLmG: } public function appendBytes($size, $data) { goto A_JWb; nmkCH: unset($b); goto lhTT8; ITk7C: $ret = $this->append($b); goto nmkCH; zkMJz: return -1; goto T7LVh; T7LVh: aj_FW: goto ITk7C; eVvrT: $b = QRbitstream::newFromBytes($size, $data); goto LOPn9; LOPn9: if (!is_null($b)) { goto aj_FW; } goto zkMJz; cug2b: return 0; goto ZpvlQ; A_JWb: if (!($size == 0)) { goto ZUA5u; } goto cug2b; ZpvlQ: ZUA5u: goto eVvrT; lhTT8: return $ret; goto nCJNv; nCJNv: } public function toByte() { goto kjkMX; UIoAG: $data[$i] = $v; goto NVOt6; jK06T: jOXDJ: goto KsyXd; kjkMX: $size = $this->size(); goto bFJTT; F8DQn: $v = $v << 1; goto UP3Tr; C1she: $p++; goto sYux0; WTw0d: K11tv: goto fvFmd; bFJTT: if (!($size == 0)) { goto f5JXR; } goto dP4qt; eI51F: $bytes = (int) ($size / 8); goto y23RT; KsyXd: if (!($i < $bytes)) { goto lygu4; } goto UsdVZ; TU3Lc: M_08V: goto UIoAG; Jg4ZU: goto K11tv; goto YlwQ4; PjpfV: wAcau: goto LIB1e; RMn1A: goto jOXDJ; goto GH3Jv; ScL_Z: $j++; goto Jg4ZU; GH3Jv: lygu4: goto IG5AH; GXx8u: $v = $v << 1; goto BE5AW; NVOt6: NSf9M: goto IUqA5; UP3Tr: $v |= $this->data[$p]; goto y6f1b; Q5qaj: $j = 0; goto qZ52h; y6f1b: $p++; goto PjpfV; dP4qt: return array(); goto oTlxV; oTlxV: f5JXR: goto xoe5b; YlwQ4: ftIl0: goto TRnI4; KKDFo: $i = 0; goto jK06T; xoe5b: $data = array_fill(0, (int) (($size + 7) / 8), 0); goto eI51F; qZ52h: S1zp2: goto QVIC8; YmWsF: goto S1zp2; goto TU3Lc; yy5Se: $v = 0; goto TF5O4; BE5AW: $v |= $this->data[$p]; goto C1she; LIB1e: $j++; goto YmWsF; y23RT: $p = 0; goto KKDFo; S4ycK: return $data; goto ue9PF; TRnI4: $data[$bytes] = $v; goto pPOJw; TF5O4: $j = 0; goto WTw0d; sYux0: NHhfm: goto ScL_Z; QVIC8: if (!($j < 8)) { goto M_08V; } goto F8DQn; IG5AH: if (!($size & 7)) { goto TxhWP; } goto yy5Se; fvFmd: if (!($j < ($size & 7))) { goto ftIl0; } goto GXx8u; pPOJw: TxhWP: goto S4ycK; IUqA5: $i++; goto RMn1A; UsdVZ: $v = 0; goto Q5qaj; ue9PF: } } goto qNwDT; D9xCT: define("\x51\x52\x5f\115\117\104\105\x5f\116\x55\x4d", 0); goto gyBic; qNwDT: class QRsplit { public $dataStr = ''; public $input; public $modeHint; public function __construct($dataStr, $input, $modeHint) { goto eeVjS; eGiUk: $this->input = $input; goto AXIcJ; eeVjS: $this->dataStr = $dataStr; goto eGiUk; AXIcJ: $this->modeHint = $modeHint; goto wS9T2; wS9T2: } public static function isdigitat($str, $pos) { goto kqYOJ; GulkI: return false; goto tVObz; tVObz: hYXh4: goto Ks_No; Ks_No: return ord($str[$pos]) >= ord("\x30") && ord($str[$pos]) <= ord("\71"); goto g4N8i; kqYOJ: if (!($pos >= strlen($str))) { goto hYXh4; } goto GulkI; g4N8i: } public static function isalnumat($str, $pos) { goto jtI8C; XucCC: oxii_: goto Dw0cq; jtI8C: if (!($pos >= strlen($str))) { goto oxii_; } goto Mga26; Dw0cq: return QRinput::lookAnTable(ord($str[$pos])) >= 0; goto Xd4FL; Mga26: return false; goto XucCC; Xd4FL: } public function identifyMode($pos) { goto KELhp; yJHPq: return QR_MODE_8; goto Uir5t; D41Ym: WKTYe: goto pCQiI; EoTX1: return QR_MODE_NUL; goto mj5iZ; H0neT: goto oZcos; goto oWQ4i; cMqtm: if (!($word >= 0x8140 && $word <= 0x9ffc || $word >= 0xe040 && $word <= 0xebbf)) { goto Q9TAZ; } goto uIRRK; uIRRK: return QR_MODE_KANJI; goto peWbq; peWbq: Q9TAZ: goto D41Ym; pCQiI: MrpAh: goto ZgqHj; XMiRO: MVuPV: goto H0neT; ZgqHj: goto MVuPV; goto Mc3Jk; mj5iZ: pmjMb: goto SheJu; EvtqE: if (self::isdigitat($this->dataStr, $pos)) { goto X6hrN; } goto N5Stx; SheJu: $c = $this->dataStr[$pos]; goto EvtqE; JSJl6: return QR_MODE_AN; goto XMiRO; KELhp: if (!($pos >= strlen($this->dataStr))) { goto pmjMb; } goto EoTX1; auFkU: $d = $this->dataStr[$pos + 1]; goto NBTn9; oWQ4i: X6hrN: goto TAlF3; nY9lR: oZcos: goto yJHPq; N5Stx: if (self::isalnumat($this->dataStr, $pos)) { goto K1B33; } goto hytbN; hytbN: if (!($this->modeHint == QR_MODE_KANJI)) { goto MrpAh; } goto Vs3pj; Mc3Jk: K1B33: goto JSJl6; NBTn9: $word = ord($c) << 8 | ord($d); goto cMqtm; Vs3pj: if (!($pos + 1 < strlen($this->dataStr))) { goto WKTYe; } goto auFkU; TAlF3: return QR_MODE_NUM; goto nY9lR; Uir5t: } public function eatNum() { goto hQQuY; umZf3: $p = 0; goto Da7Jq; K0I25: hOXIk: goto XF_XX; w3h35: faXeF: goto mb20K; mtRvS: if (!self::isdigitat($this->dataStr, $p)) { goto x2tlT; } goto Jjw6_; ysftH: $mode = $this->identifyMode($p); goto NGe3l; Da7Jq: kY09W: goto mtRvS; lSH1q: $dif = QRinput::estimateBitsModeNum($run) + 4 + $ln + QRinput::estimateBitsModeAn(1) - QRinput::estimateBitsModeAn($run + 1); goto FeI3Y; Gi_8E: goto kY09W; goto lw9hF; NGe3l: if (!($mode == QR_MODE_8)) { goto ed2jn; } goto aX0yU; lw9hF: x2tlT: goto pAhLJ; vFtOZ: return $run; goto uYgNe; FeI3Y: if (!($dif > 0)) { goto faXeF; } goto hEJev; BngmZ: return $this->eat8(); goto K0I25; vtgQ2: if (!($mode == QR_MODE_AN)) { goto Nyv1C; } goto lSH1q; Jjw6_: $p++; goto Gi_8E; aX0yU: $dif = QRinput::estimateBitsModeNum($run) + 4 + $ln + QRinput::estimateBitsMode8(1) - QRinput::estimateBitsMode8($run + 1); goto U9RPX; pQAAf: return -1; goto RKGhc; pAhLJ: $run = $p; goto ysftH; XF_XX: ed2jn: goto vtgQ2; RKGhc: sqsP_: goto vFtOZ; U9RPX: if (!($dif > 0)) { goto hOXIk; } goto BngmZ; mb20K: Nyv1C: goto Vl6TE; SjqLc: if (!($ret < 0)) { goto sqsP_; } goto pQAAf; Vl6TE: $ret = $this->input->append(QR_MODE_NUM, $run, str_split($this->dataStr)); goto SjqLc; hEJev: return $this->eatAn(); goto w3h35; hQQuY: $ln = QRspec::lengthIndicator(QR_MODE_NUM, $this->input->getVersion()); goto umZf3; uYgNe: } public function eatAn() { goto pRIKT; I6cYS: $q = $p; goto kX14v; tkv1X: if (self::isdigitat($this->dataStr, $p)) { goto j7QTq; } goto zyzk_; ReL5L: goto Thxwc; goto t8voI; NIO2q: sN7qW: goto LK7f2; xV9Ub: TChfF: goto K7A3y; Jn5sI: if (self::isalnumat($this->dataStr, $p)) { goto P3gyH; } goto fUgjq; M3c4X: $p = $q; goto ReL5L; wp2Jg: j7QTq: goto I6cYS; zTAJV: $run = $p; goto Jn5sI; pRIKT: $la = QRspec::lengthIndicator(QR_MODE_AN, $this->input->getVersion()); goto UrOqm; K7A3y: P3gyH: goto fcC4i; Y_lVg: $q++; goto w2IAm; Fscdq: $dif = QRinput::estimateBitsModeAn($p) + QRinput::estimateBitsModeNum($q - $p) + 4 + $ln - QRinput::estimateBitsModeAn($q); goto GbKUF; swtj5: goto m3RAE; goto wp2Jg; N1cP1: if (!($ret < 0)) { goto sN7qW; } goto jRb7Y; ma2cC: if (!self::isdigitat($this->dataStr, $q)) { goto ujP6n; } goto Y_lVg; KCzhn: if (!self::isalnumat($this->dataStr, $p)) { goto Zz_nV; } goto tkv1X; cGzY1: m3RAE: goto Hzzmq; fQFDc: $p = 0; goto hOYAL; jPguL: Thxwc: goto cGzY1; t8voI: TsowL: goto WIn1G; fUgjq: $dif = QRinput::estimateBitsModeAn($run) + 4 + $la + QRinput::estimateBitsMode8(1) - QRinput::estimateBitsMode8($run + 1); goto M0aiI; jRb7Y: return -1; goto NIO2q; hOYAL: f3V8Z: goto KCzhn; M0aiI: if (!($dif > 0)) { goto TChfF; } goto bWsxQ; UrOqm: $ln = QRspec::lengthIndicator(QR_MODE_NUM, $this->input->getVersion()); goto fQFDc; XsgRo: ujP6n: goto Fscdq; GbKUF: if ($dif < 0) { goto TsowL; } goto M3c4X; Hzzmq: goto f3V8Z; goto tBrvM; w2IAm: goto HjaEj; goto XsgRo; WIn1G: goto Zz_nV; goto jPguL; tBrvM: Zz_nV: goto zTAJV; fcC4i: $ret = $this->input->append(QR_MODE_AN, $run, str_split($this->dataStr)); goto N1cP1; bWsxQ: return $this->eat8(); goto xV9Ub; kX14v: HjaEj: goto ma2cC; LK7f2: return $run; goto ISOgT; zyzk_: $p++; goto swtj5; ISOgT: } public function eatKanji() { goto dQxL2; M4ALw: mTtdQ: goto C5c1w; M_mYJ: $p += 2; goto RaVln; a5hdU: TWIfr: goto KFJpk; RaVln: goto mTtdQ; goto sLFZh; LdWpd: if (!($ret < 0)) { goto TWIfr; } goto WbOEb; WbOEb: return -1; goto a5hdU; KFJpk: return $run; goto dMjSG; sxsDF: $ret = $this->input->append(QR_MODE_KANJI, $p, str_split($this->dataStr)); goto LdWpd; sLFZh: qUDr5: goto sxsDF; dQxL2: $p = 0; goto M4ALw; C5c1w: if (!($this->identifyMode($p) == QR_MODE_KANJI)) { goto qUDr5; } goto M_mYJ; dMjSG: } public function eat8() { goto Hd8Mm; yOGqY: goto mcBa4; goto D5zCJ; OEAFL: goto DaEB7; goto Feqpf; WtPJf: FCrGS: goto tJENs; YE0Ex: $p = $q; goto BzGps; ujYT2: if (!self::isalnumat($this->dataStr, $q)) { goto v7miq; } goto kAZW5; EBvni: if ($mode == QR_MODE_NUM) { goto rfz9y; } goto EPx53; gbVgD: $q = $p; goto oAXJN; lBzlh: P9l8R: goto mXZSq; KTG_0: $dif = QRinput::estimateBitsMode8($p) + QRinput::estimateBitsModeNum($q - $p) + 4 + $ln - QRinput::estimateBitsMode8($q); goto dCA7z; lhZ31: $mode = $this->identifyMode($p); goto hGC43; IwRJS: EezA0: goto opXUh; C_BHU: $dif = QRinput::estimateBitsMode8($p) + QRinput::estimateBitsModeAn($q - $p) + 4 + $la - QRinput::estimateBitsMode8($q); goto lmQcf; pKKaM: Rtceo: goto EBvni; l1cN4: goto ru1bh; goto OqL8V; heILu: $p++; goto yOGqY; OqL8V: rfz9y: goto gbVgD; i5f1I: $ln = QRspec::lengthIndicator(QR_MODE_NUM, $this->input->getVersion()); goto MyxSM; mWNIc: $q = $p; goto GX269; EBCyx: IMtdZ: goto eEQNg; wLXem: $q++; goto OEAFL; EEb51: pYqgY: goto tJry8; lmQcf: if ($dif < 0) { goto pYqgY; } goto k7oC_; eEQNg: mcBa4: goto l1cN4; opXUh: $run = $p; goto oYb30; htkkR: ru1bh: goto V8TLm; GX269: lTM99: goto ujYT2; V8TLm: goto FCrGS; goto IwRJS; tJry8: goto EezA0; goto EBCyx; LBTZR: $dataStrLen = strlen($this->dataStr); goto WtPJf; mXZSq: goto EezA0; goto mcx4Z; KZpF8: if (!($ret < 0)) { goto MQ8vI; } goto Zm1oy; GWeOZ: v7miq: goto C_BHU; AA60d: MQ8vI: goto Dj4nI; MyxSM: $p = 1; goto LBTZR; wi_J0: goto IMtdZ; goto EEb51; tJENs: if (!($p < $dataStrLen)) { goto EezA0; } goto lhZ31; hGC43: if (!($mode == QR_MODE_KANJI)) { goto Rtceo; } goto YRFTg; PBFR8: if (!self::isdigitat($this->dataStr, $q)) { goto v5ltz; } goto wLXem; BzGps: goto uZRrz; goto lBzlh; D5zCJ: uk0V1: goto mWNIc; Dj4nI: return $run; goto WHO4l; k7oC_: $p = $q; goto wi_J0; Zm1oy: return -1; goto AA60d; R9tDa: goto lTM99; goto GWeOZ; kAZW5: $q++; goto R9tDa; Hd8Mm: $la = QRspec::lengthIndicator(QR_MODE_AN, $this->input->getVersion()); goto i5f1I; oAXJN: DaEB7: goto PBFR8; EPx53: if ($mode == QR_MODE_AN) { goto uk0V1; } goto heILu; YRFTg: goto EezA0; goto pKKaM; oYb30: $ret = $this->input->append(QR_MODE_8, $run, str_split($this->dataStr)); goto KZpF8; Feqpf: v5ltz: goto KTG_0; dCA7z: if ($dif < 0) { goto P9l8R; } goto YE0Ex; mcx4Z: uZRrz: goto htkkR; WHO4l: } public function splitString() { goto pIKpo; b0_he: if (!(strlen($this->dataStr) > 0)) { goto IN0hC; } goto KpKkC; VJcjz: zbJap: goto HuTUH; bNBqk: BHtPL: goto ElAMj; HfBod: IN0hC: goto e6ukw; pIKpo: wDnAi: goto b0_he; ElAMj: if (!($length == 0)) { goto zbJap; } goto EZNHx; KpKkC: if (!($this->dataStr == '')) { goto QyRQB; } goto yGgBs; YOUM8: $this->dataStr = substr($this->dataStr, $length); goto UEEOh; GN2Dx: switch ($mode) { case QR_MODE_NUM: $length = $this->eatNum(); goto BHtPL; case QR_MODE_AN: $length = $this->eatAn(); goto BHtPL; case QR_MODE_KANJI: goto P_mUX; cvp6L: $length = $this->eat8(); goto DTMnm; DTMnm: goto NhKDm; goto pC4MO; Zak4F: $length = $this->eatKanji(); goto pylLA; u7jSd: goto BHtPL; goto TMv7X; P_mUX: if ($hint == QR_MODE_KANJI) { goto FXwoO; } goto cvp6L; pC4MO: FXwoO: goto Zak4F; pylLA: NhKDm: goto u7jSd; TMv7X: default: $length = $this->eat8(); goto BHtPL; } goto J3xlp; EZNHx: return 0; goto VJcjz; sMS1r: QyRQB: goto tvngy; tvngy: $mode = $this->identifyMode(0); goto GN2Dx; Bv7It: h620a: goto YOUM8; HuTUH: if (!($length < 0)) { goto h620a; } goto u6JH2; u6JH2: return -1; goto Bv7It; UEEOh: goto wDnAi; goto HfBod; J3xlp: Ke1sM: goto bNBqk; yGgBs: return 0; goto sMS1r; e6ukw: } public function toUpper() { goto N3Gny; Zo0Lf: $p++; goto UuO7D; zIISY: $this->dataStr[$p] = chr(ord($this->dataStr[$p]) - 32); goto ezp89; AultO: fhdsE: goto NLXdq; ezp89: DX1KG: goto Zo0Lf; OaDLQ: $p = 0; goto XUfi0; nEbz1: if (!($p < $stringLen)) { goto p6uoj; } goto Uj_B9; sThQJ: goto E00ju; goto kcu3p; tlTPa: if ($mode == QR_MODE_KANJI) { goto fhdsE; } goto LPHcH; Uj_B9: $mode = self::identifyMode(substr($this->dataStr, $p), $this->modeHint); goto tlTPa; XUfi0: E00ju: goto nEbz1; kcu3p: p6uoj: goto tIKnj; N3Gny: $stringLen = strlen($this->dataStr); goto OaDLQ; UuO7D: goto bgqDj; goto AultO; tfVUp: bgqDj: goto sThQJ; LPHcH: if (!(ord($this->dataStr[$p]) >= ord("\x61") && ord($this->dataStr[$p]) <= ord("\x7a"))) { goto DX1KG; } goto zIISY; NLXdq: $p += 2; goto tfVUp; tIKnj: return $this->dataStr; goto CP2NS; CP2NS: } public static function splitStringToQRinput($string, QRinput $input, $modeHint, $casesensitive = true) { goto u0lwd; KgcjW: if ($casesensitive) { goto LJB33; } goto FMEq7; tlRS3: LJB33: goto DIOPw; AUKOY: throw new Exception("\145\155\160\164\171\x20\x73\164\x72\x69\x6e\x67\x21\x21\x21"); goto QTFFu; FMEq7: $split->toUpper(); goto tlRS3; QTFFu: gEBys: goto KccSO; u0lwd: if (!(is_null($string) || $string == "\134\x30" || $string == '')) { goto gEBys; } goto AUKOY; KccSO: $split = new QRsplit($string, $input, $modeHint); goto KgcjW; DIOPw: return $split->splitString(); goto kfPnU; kfPnU: } } goto RAkvR; LSw2q: define("\x51\x52\103\x41\x50\x5f\x45\103", 3); goto pDbsE; SIuAm: define("\x4e\62", 3); goto ShvGG; gyBic: define("\x51\122\137\115\x4f\x44\x45\x5f\101\x4e", 1); goto r0lwD; lYha2: define("\123\124\122\x55\103\124\x55\x52\105\x5f\110\x45\x41\104\x45\x52\137\102\x49\x54\123", 20); goto Wpr6q; bV52R: define("\121\122\137\x4c\117\107\137\104\111\122", false); goto iVM_h; uFBks: define("\121\122\137\105\x43\114\105\126\x45\114\x5f\x4d", 1); goto wZxiQ; jnlRs: define("\x51\x52\x43\x41\120\x5f\122\x45\x4d\111\116\x44\105\122", 2); goto LSw2q; G13xF: define("\121\x52\x43\x41\x50\137\127\111\104\x54\110", 0); goto u_k8i; KqldS: class QRimage { public static function png($frame, $filename = false, $pixelPerPoint = 4, $outerFrame = 4, $saveandprint = FALSE) { goto WIwB4; opSUp: UQKet: goto GpbT4; WIwB4: $image = self::image($frame, $pixelPerPoint, $outerFrame); goto d5Sxb; oNZp4: goto bGRJM; goto opSUp; wQDvN: Header("\103\157\x6e\x74\145\x6e\164\x2d\x74\x79\160\x65\x3a\x20\x69\x6d\141\x67\x65\x2f\160\156\147"); goto iVIK_; s2DWC: bGRJM: goto t1tBD; fMR4V: ImageDestroy($image); goto NolUF; d5Sxb: if ($filename === false) { goto wP9c2; } goto LLcxe; IZcuT: ImagePng($image, $filename); goto oNZp4; OSWlD: header("\x43\157\156\x74\145\156\164\55\164\x79\x70\145\x3a\40\x69\x6d\141\147\145\x2f\160\x6e\x67"); goto Fh9qp; GpbT4: ImagePng($image, $filename); goto OSWlD; LLcxe: if ($saveandprint === TRUE) { goto UQKet; } goto IZcuT; PDCcz: cOn40: goto fMR4V; tXMmC: wP9c2: goto wQDvN; Fh9qp: ImagePng($image); goto s2DWC; t1tBD: goto cOn40; goto tXMmC; iVIK_: ImagePng($image); goto PDCcz; NolUF: } public static function jpg($frame, $filename = false, $pixelPerPoint = 8, $outerFrame = 4, $q = 85) { goto izKy1; p9HKG: PydS7: goto Dz0EL; uGr5X: Header("\103\157\156\x74\145\156\164\55\x74\171\x70\145\x3a\40\x69\x6d\141\x67\x65\57\x6a\160\x65\147"); goto toEfI; Dz0EL: ImageDestroy($image); goto BWVzu; Vh5Rn: ImageJpeg($image, $filename, $q); goto md69h; izKy1: $image = self::image($frame, $pixelPerPoint, $outerFrame); goto hIHqn; AfuXk: U3iYA: goto uGr5X; hIHqn: if ($filename === false) { goto U3iYA; } goto Vh5Rn; md69h: goto PydS7; goto AfuXk; toEfI: ImageJpeg($image, null, $q); goto p9HKG; BWVzu: } private static function image($frame, $pixelPerPoint = 4, $outerFrame = 4) { goto pR0wD; ZMa2K: $x = 0; goto nN3K1; b8BNf: o6Ncs: goto mq1hf; pZ3uo: imagefill($base_image, 0, 0, $col[0]); goto rImnL; IlCT_: ImageSetPixel($base_image, $x + $outerFrame, $y + $outerFrame, $col[1]); goto nKNWQ; Ep5eT: inzyo: goto PCtvX; yMUHt: if (!($x < $w)) { goto mm38N; } goto ixtBL; vYqXJ: $target_image = ImageCreate($imgW * $pixelPerPoint, $imgH * $pixelPerPoint); goto NTiOV; X_JUf: $imgW = $w + 2 * $outerFrame; goto n3e4W; WgbgF: return $target_image; goto bb0ZB; okzcc: ImageDestroy($base_image); goto WgbgF; n3e4W: $imgH = $h + 2 * $outerFrame; goto l0Guu; rImnL: $y = 0; goto OkV5D; O99Yp: $col[1] = ImageColorAllocate($base_image, 0, 0, 0); goto pZ3uo; ixtBL: if (!($frame[$y][$x] == "\61")) { goto xXrOy; } goto IlCT_; nKNWQ: xXrOy: goto Ep5eT; OkV5D: gfqKf: goto NN1x9; syxiw: goto gfqKf; goto iao_3; l0Guu: $base_image = ImageCreate($imgW, $imgH); goto loRsP; NN1x9: if (!($y < $h)) { goto rL75w; } goto ZMa2K; MXS_1: $w = strlen($frame[0]); goto X_JUf; iTlVF: goto d_Ug6; goto bYbH1; bYbH1: mm38N: goto b8BNf; mq1hf: $y++; goto syxiw; PCtvX: $x++; goto iTlVF; nN3K1: d_Ug6: goto yMUHt; NTiOV: ImageCopyResized($target_image, $base_image, 0, 0, 0, 0, $imgW * $pixelPerPoint, $imgH * $pixelPerPoint, $imgW, $imgH); goto okzcc; loRsP: $col[0] = ImageColorAllocate($base_image, 255, 255, 255); goto O99Yp; iao_3: rL75w: goto vYqXJ; pR0wD: $h = count($frame); goto MXS_1; bb0ZB: } } goto lYha2; wZxiQ: define("\121\x52\137\105\103\114\105\x56\105\114\137\x51", 2); goto Y1vuq; Wpr6q: define("\115\x41\x58\x5f\123\124\x52\125\x43\124\125\x52\105\x44\x5f\123\131\115\102\x4f\114\123", 16); goto dTTFM; dTTFM: class QRinputItem { public $mode; public $size; public $data; public $bstream; public function __construct($mode, $size, $data, $bstream = null) { goto SokUe; AszZs: if (!(count($setData) < $size)) { goto pmYKL; } goto KhYJA; v163X: if (QRinput::check($mode, $size, $setData)) { goto IV3xe; } goto Zixbo; lin7g: return null; goto iGKkk; ceCSf: pmYKL: goto v163X; Zixbo: throw new Exception("\x45\x72\x72\x6f\162\x20\x6d\x3a" . $mode . "\x2c\x73\x3a" . $size . "\x2c\x64\x3a" . join("\x2c", $setData)); goto lin7g; znDt1: $this->mode = $mode; goto PcJNO; m4sDG: $this->data = $setData; goto rRcZl; PcJNO: $this->size = $size; goto m4sDG; SokUe: $setData = array_slice($data, 0, $size); goto AszZs; rRcZl: $this->bstream = $bstream; goto cLHCs; iGKkk: IV3xe: goto znDt1; KhYJA: $setData = array_merge($setData, array_fill(0, $size - count($setData), 0)); goto ceCSf; cLHCs: } public function encodeModeNum($version) { try { goto jv7VM; KkdrD: $i = 0; goto DDq68; MDJfM: SSMwV: goto qHWoC; vWNqa: lrpBG: goto xVF2I; UApUr: $bs->appendNum(10, $val); goto vWNqa; hLBd4: LoUWh: goto f3FOx; SBJ7a: $bs->appendNum(7, $val); goto hLBd4; vm961: $val += (ord($this->data[$i * 3 + 1]) - ord("\60")) * 10; goto ZlwNl; VpI7z: tgEgO: goto taO30; qHWoC: $val = ord($this->data[$words * 3]) - ord("\60"); goto Lyz0a; f3FOx: goto x32Sm; goto MDJfM; amsrj: $val = (ord($this->data[$i * 3]) - ord("\x30")) * 100; goto vm961; OPt2t: $val = (ord($this->data[$words * 3]) - ord("\60")) * 10; goto hBde9; POkml: x32Sm: goto aDDaZ; ZZKkd: if (!($i < $words)) { goto tgEgO; } goto amsrj; Lyz0a: $bs->appendNum(4, $val); goto POkml; dpJjt: goto GN5RJ; goto VpI7z; DDq68: GN5RJ: goto ZZKkd; RjPNr: return 0; goto N7HGc; vHDz3: $val = 0x1; goto ZRikB; m0dWi: $bs = new QRbitstream(); goto vHDz3; taO30: if ($this->size - $words * 3 == 1) { goto SSMwV; } goto lSBHn; lYEpd: $bs->appendNum(QRspec::lengthIndicator(QR_MODE_NUM, $version), $this->size); goto KkdrD; hBde9: $val += ord($this->data[$words * 3 + 1]) - ord("\x30"); goto SBJ7a; aDDaZ: $this->bstream = $bs; goto RjPNr; jv7VM: $words = (int) ($this->size / 3); goto m0dWi; lSBHn: if (!($this->size - $words * 3 == 2)) { goto LoUWh; } goto OPt2t; xVF2I: $i++; goto dpJjt; ZRikB: $bs->appendNum(4, $val); goto lYEpd; ZlwNl: $val += ord($this->data[$i * 3 + 2]) - ord("\x30"); goto UApUr; N7HGc: } catch (Exception $e) { return -1; } } public function encodeModeAn($version) { try { goto t_Vae; SB5Ce: JCpHL: goto IsW7G; oh7kT: $i = 0; goto SB5Ce; d7YkF: wO6aw: goto wVyEu; oX16m: goto JCpHL; goto e9rtw; t_Vae: $words = (int) ($this->size / 2); goto xwzKw; lpoll: if (!($this->size & 1)) { goto wO6aw; } goto l21p_; Wq_O7: $i++; goto oX16m; e9rtw: jDoIC: goto lpoll; bXglF: return 0; goto uExRW; z3lrW: $val += (int) QRinput::lookAnTable(ord($this->data[$i * 2 + 1])); goto ufsDV; l21p_: $val = QRinput::lookAnTable(ord($this->data[$words * 2])); goto gzBtA; gzBtA: $bs->appendNum(6, $val); goto d7YkF; ufsDV: $bs->appendNum(11, $val); goto Zvcuh; cju41: $val = (int) QRinput::lookAnTable(ord($this->data[$i * 2])) * 45; goto z3lrW; IsW7G: if (!($i < $words)) { goto jDoIC; } goto cju41; wVyEu: $this->bstream = $bs; goto bXglF; Zvcuh: eRv82: goto Wq_O7; xwzKw: $bs = new QRbitstream(); goto ckyFY; WsZhy: $bs->appendNum(QRspec::lengthIndicator(QR_MODE_AN, $version), $this->size); goto oh7kT; ckyFY: $bs->appendNum(4, 0x2); goto WsZhy; uExRW: } catch (Exception $e) { return -1; } } public function encodeMode8($version) { try { goto fyj3v; ZgWy5: LT2LV: goto Cqfmr; WEAi4: return 0; goto Z1JT_; Qu5w0: rlidu: goto kGf4J; KMann: YQt3H: goto dxIzD; dxIzD: if (!($i < $this->size)) { goto LT2LV; } goto TvRnD; fyj3v: $bs = new QRbitstream(); goto vKfe4; TvRnD: $bs->appendNum(8, ord($this->data[$i])); goto Qu5w0; fKi4R: $i = 0; goto KMann; kGf4J: $i++; goto zIxMo; Cqfmr: $this->bstream = $bs; goto WEAi4; zIxMo: goto YQt3H; goto ZgWy5; vKfe4: $bs->appendNum(4, 0x4); goto CtJa8; CtJa8: $bs->appendNum(QRspec::lengthIndicator(QR_MODE_8, $version), $this->size); goto fKi4R; Z1JT_: } catch (Exception $e) { return -1; } } public function encodeModeKanji($version) { try { goto S3_cw; m0bUH: IB6po: goto LroQX; c7N4g: return 0; goto Up0wg; Tx3Up: $bs->appendNum(13, $val); goto AjJc7; ppMhu: goto MZ0SM; goto ujKyw; AjJc7: H3L0y: goto MfttE; I8Dp2: $val = ord($this->data[$i]) << 8 | ord($this->data[$i + 1]); goto ugDCt; gqyDJ: $bs->appendNum(4, 0x8); goto XPcPE; MfttE: $i += 2; goto qhLjM; By7Qc: $i = 0; goto A1RUk; Q0UG9: $val -= 0x8140; goto l7ZwT; VMkDp: $h = ($val >> 8) * 0xc0; goto uRjkF; aVYhO: $val -= 0xc140; goto ppMhu; LroQX: $this->bstream = $bs; goto c7N4g; A1RUk: NLFkt: goto eNmH6; l7ZwT: MZ0SM: goto VMkDp; XPcPE: $bs->appendNum(QRspec::lengthIndicator(QR_MODE_KANJI, $version), (int) ($this->size / 2)); goto By7Qc; S3_cw: $bs = new QRbitrtream(); goto gqyDJ; ujKyw: oaKM4: goto Q0UG9; uRjkF: $val = ($val & 0xff) + $h; goto Tx3Up; qhLjM: goto NLFkt; goto m0bUH; ugDCt: if ($val <= 0x9ffc) { goto oaKM4; } goto aVYhO; eNmH6: if (!($i < $this->size)) { goto IB6po; } goto I8Dp2; Up0wg: } catch (Exception $e) { return -1; } } public function encodeModeStructure() { try { goto mUAtU; zGb86: $bs->appendNum(4, ord($this->data[1]) - 1); goto TDwLd; A1wlo: $this->bstream = $bs; goto CAPyQ; CAPyQ: return 0; goto VCU3o; gRHzA: $bs->appendNum(8, ord($this->data[2])); goto A1wlo; mUAtU: $bs = new QRbitstream(); goto JCEKj; TDwLd: $bs->appendNum(4, ord($this->data[0]) - 1); goto gRHzA; JCEKj: $bs->appendNum(4, 0x3); goto zGb86; VCU3o: } catch (Exception $e) { return -1; } } public function estimateBitStreamSizeOfEntry($version) { goto XbEgW; QTLf_: switch ($this->mode) { case QR_MODE_NUM: $bits = QRinput::estimateBitsModeNum($this->size); goto RmGzR; case QR_MODE_AN: $bits = QRinput::estimateBitsModeAn($this->size); goto RmGzR; case QR_MODE_8: $bits = QRinput::estimateBitsMode8($this->size); goto RmGzR; case QR_MODE_KANJI: $bits = QRinput::estimateBitsModeKanji($this->size); goto RmGzR; case QR_MODE_STRUCTURE: return STRUCTURE_HEADER_BITS; default: return 0; } goto HbfHa; HbfHa: hw9W0: goto XKOx6; kdWCN: c7Kz0: goto QTLf_; XKOx6: RmGzR: goto lZRAE; XbEgW: $bits = 0; goto U0mKO; Ksr2v: $m = 1 << $l; goto FYZ6C; lZRAE: $l = QRspec::lengthIndicator($this->mode, $version); goto Ksr2v; U0mKO: if (!($version == 0)) { goto c7Kz0; } goto xM4vJ; xM4vJ: $version = 1; goto kdWCN; PL1QS: $bits += $num * (4 + $l); goto mm8Th; FYZ6C: $num = (int) (($this->size + $m - 1) / $m); goto PL1QS; mm8Th: return $bits; goto HiODN; HiODN: } public function encodeBitStream($version) { try { goto Ec45F; NK_e2: goto RXutA; goto NBJy6; yBDOR: if ($this->size > $words) { goto uwK9O; } goto MI1dt; Iz4FY: $this->bstream = new QRbitstream(); goto ejKBc; OeQ1z: switch ($this->mode) { case QR_MODE_NUM: $ret = $this->encodeModeNum($version); goto KHnbd; case QR_MODE_AN: $ret = $this->encodeModeAn($version); goto KHnbd; case QR_MODE_8: $ret = $this->encodeMode8($version); goto KHnbd; case QR_MODE_KANJI: $ret = $this->encodeModeKanji($version); goto KHnbd; case QR_MODE_STRUCTURE: $ret = $this->encodeModeStructure(); goto KHnbd; default: goto KHnbd; } goto B24xx; Yx13u: $words = QRspec::maximumWords($this->mode, $version); goto yBDOR; VtXSE: RXutA: goto iEQxz; QCYm8: gPWxc: goto NK_e2; MGLbQ: $st2 = new QRinputItem($this->mode, $this->size - $words, array_slice($this->data, $words)); goto nyanJ; iEQxz: return $this->bstream->size(); goto d770Z; MI1dt: $ret = 0; goto OeQ1z; Ec45F: unset($this->bstream); goto Yx13u; QP8l4: $this->bstream->append($st2->bstream); goto oscMR; layuc: KHnbd: goto CSCKl; icDUu: $st1 = new QRinputItem($this->mode, $words, $this->data); goto MGLbQ; nyanJ: $st1->encodeBitStream($version); goto JgE41; NBJy6: uwK9O: goto icDUu; oscMR: unset($st1); goto r_Mwz; CSCKl: if (!($ret < 0)) { goto gPWxc; } goto DmwRr; r_Mwz: unset($st2); goto VtXSE; JgE41: $st2->encodeBitStream($version); goto Iz4FY; B24xx: LezIw: goto layuc; DmwRr: return -1; goto QCYm8; ejKBc: $this->bstream->append($st1->bstream); goto QP8l4; d770Z: } catch (Exception $e) { return -1; } } } goto frCRW; RAkvR: class QRrsItem { public $mm; public $nn; public $alpha_to = array(); public $index_of = array(); public $genpoly = array(); public $nroots; public $fcr; public $prim; public $iprim; public $pad; public $gfpoly; public function modnn($x) { goto PBlqC; P4V1s: goto nhNiS; goto LSX3s; LSX3s: maY3x: goto TbIm7; dLa2C: $x = ($x >> $this->mm) + ($x & $this->nn); goto P4V1s; PBlqC: nhNiS: goto iSuEz; TbIm7: return $x; goto uZnaB; iSuEz: if (!($x >= $this->nn)) { goto maY3x; } goto I1XYU; I1XYU: $x -= $this->nn; goto dLa2C; uZnaB: } public static function init_rs_char($symsize, $gfpoly, $fcr, $prim, $nroots, $pad) { goto yZtaa; hq_Xq: $rs->fcr = $fcr; goto hJ0XK; x6A8O: $NN =& $rs->nn; goto C5ROZ; DBg8i: if (!($sr & 1 << $symsize)) { goto tlHwD; } goto RNVKS; ER_vS: $rs = new QRrsItem(); goto iWhZj; hJ0XK: $rs->prim = $prim; goto uaOyb; Cqh3k: goto kITKz; goto mDYXQ; wVcRo: $rs = NULL; goto rUX6x; UXbSM: $i = 0; goto PYVU1; gCWtk: vApiI: goto zFlzW; Vt_MT: $rs->alpha_to[$A0] = 0; goto w7fRH; ORitc: $i = 0; goto kATtj; PYVU1: mbZRA: goto KmzpG; J0KnD: DlDZk: goto UO2dN; LYPZc: goto mbZRA; goto hs_yI; NHk5i: $iprim = 1; goto W0m2c; spjyH: if (!($sr != 1)) { goto x2P0z; } goto wVcRo; uaOyb: $rs->nroots = $nroots; goto UKnn0; UaLj8: zwfmo: goto tyle7; qdG4U: SyfyG: goto VHFJL; lfkzw: if ($rs->genpoly[$j] != 0) { goto W7Z6o; } goto HVNwQ; n3cnw: izrIL: goto GhCoy; W0m2c: FHMHz: goto VB9Py; FqfIS: $rs->alpha_to = array_fill(0, $rs->nn + 1, 0); goto SIsnh; c1XVX: if (!($fcr < 0 || $fcr >= 1 << $symsize)) { goto zwfmo; } goto hIO6d; BHBRc: $rs->index_of[$sr] = $i; goto wQXNl; NU7hX: $iprim += $rs->nn; goto xF0Py; a7mtZ: return $rs; goto ixJ1Q; f0sNf: $rs->genpoly[$i + 1] = 1; goto bHR7L; kMJ4u: goto gg5gb; goto d2dYL; pBWNl: yieQ9: goto WTMsR; ixJ1Q: GfX7p: goto UFbRu; VB9Py: if (!($iprim % $prim != 0)) { goto yieQ9; } goto ogkUF; rUX6x: return $rs; goto woeir; xF0Py: goto FHMHz; goto pBWNl; yZtaa: $rs = null; goto TAyUu; B8IzV: $i++; goto LYPZc; UFbRu: if (!($pad < 0 || $pad >= (1 << $symsize) - 1 - $nroots)) { goto tD0NY; } goto TrPko; UO2dN: $i++; goto JRyaG; YKnGd: $rs->genpoly[$j] = $rs->genpoly[$j - 1] ^ $rs->alpha_to[$rs->modnn($rs->index_of[$rs->genpoly[$j]] + $root)]; goto hpdeQ; TB3RB: $sr &= $rs->nn; goto HCamO; cj9mD: return $rs; goto vObJb; bHR7L: $j = $i; goto mU7ab; H6g32: $root += $prim; goto jUfyw; w7fRH: $sr = 1; goto UXbSM; GhCoy: $i = 0; goto qdG4U; oxgCZ: if (!($i < $nroots)) { goto izrIL; } goto f0sNf; C5ROZ: $A0 =& $NN; goto GnlI7; hIO6d: return $rs; goto UaLj8; qcjma: tlHwD: goto TB3RB; hpdeQ: kITKz: goto gCWtk; mDYXQ: W7Z6o: goto YKnGd; ick8k: $rs->genpoly = array_fill(0, $nroots + 1, 0); goto hq_Xq; wQXNl: $rs->alpha_to[$i] = $sr; goto YOiN2; WTMsR: $rs->iprim = (int) ($iprim / $prim); goto h5aR4; kATtj: $root = $fcr * $prim; goto N5Rtt; tyle7: if (!($prim <= 0 || $prim >= 1 << $symsize)) { goto IDgpd; } goto cj9mD; d2dYL: hYYy3: goto JMWAd; N5Rtt: iUJ_z: goto oxgCZ; RNVKS: $sr ^= $gfpoly; goto qcjma; dHbTC: return $rs; goto aEiIb; UKnn0: $rs->gfpoly = $gfpoly; goto NHk5i; vObJb: IDgpd: goto GP7ip; h5aR4: $rs->genpoly[0] = 1; goto ORitc; ClNF5: return $rs; goto Q4WiX; SIsnh: $rs->index_of = array_fill(0, $rs->nn + 1, 0); goto x6A8O; HCamO: kHw5l: goto B8IzV; Kv2j7: $rs->genpoly[$i] = $rs->index_of[$rs->genpoly[$i]]; goto J0KnD; hs_yI: tprUh: goto spjyH; ozWD1: B7qVJ: goto ClNF5; GnlI7: $rs->index_of[0] = $A0; goto Vt_MT; mU7ab: gg5gb: goto FGR9a; rJSMh: tD0NY: goto ER_vS; LcsQa: Timf9: goto lt2lz; TrPko: return $rs; goto rJSMh; aEiIb: VJ1JU: goto c1XVX; GP7ip: if (!($nroots < 0 || $nroots >= 1 << $symsize)) { goto GfX7p; } goto a7mtZ; VHFJL: if (!($i <= $nroots)) { goto B7qVJ; } goto Kv2j7; iWhZj: $rs->mm = $symsize; goto aet2h; zFlzW: $j--; goto kMJ4u; YOiN2: $sr <<= 1; goto DBg8i; lt2lz: $i++; goto H6g32; HVNwQ: $rs->genpoly[$j] = $rs->genpoly[$j - 1]; goto Cqh3k; FGR9a: if (!($j > 0)) { goto hYYy3; } goto lfkzw; JRyaG: goto SyfyG; goto ozWD1; jUfyw: goto iUJ_z; goto n3cnw; JMWAd: $rs->genpoly[0] = $rs->alpha_to[$rs->modnn($rs->index_of[$rs->genpoly[0]] + $root)]; goto LcsQa; Jp1jh: $rs->pad = $pad; goto FqfIS; ogkUF: cr5KC: goto NU7hX; woeir: x2P0z: goto ick8k; aet2h: $rs->nn = (1 << $symsize) - 1; goto Jp1jh; KmzpG: if (!($i < $rs->nn)) { goto tprUh; } goto BHBRc; TAyUu: if (!($symsize < 0 || $symsize > 8)) { goto VJ1JU; } goto dHbTC; Q4WiX: } public function encode_rs_char($data, &$parity) { goto I6AVg; HQpxb: $i++; goto QIqHw; lxGpJ: array_push($parity, 0); goto EWR4U; JorbK: $parity = array_fill(0, $NROOTS, 0); goto gjA_b; Bo6qm: goto stAjU; goto U137X; ys2b0: array_push($parity, $ALPHA_TO[$this->modnn($feedback + $GENPOLY[0])]); goto erfDF; AXT7G: $ALPHA_TO =& $this->alpha_to; goto yBoOk; rbLrf: array_shift($parity); goto COR9Q; IbfJH: if (!($j < $NROOTS)) { goto XwtSq; } goto mU2vz; yBoOk: $INDEX_OF =& $this->index_of; goto SvQF2; U137X: XwtSq: goto SyA6Q; icV3J: Afv8x: goto BFQd7; EWR4U: goto lIxpr; goto kIExr; gjA_b: $i = 0; goto PF8ib; rlh8W: LjKTk: goto HQpxb; irLy1: $j = 1; goto L8O0o; PE7Pk: $IPRIM =& $this->iprim; goto usdqp; mU2vz: $parity[$j] ^= $ALPHA_TO[$this->modnn($feedback + $GENPOLY[$NROOTS - $j])]; goto PC3f7; L8O0o: stAjU: goto IbfJH; T2pIT: $feedback = $INDEX_OF[$data[$i] ^ $parity[0]]; goto rBBTu; fMDdw: $j++; goto Bo6qm; SvQF2: $GENPOLY =& $this->genpoly; goto jOaQo; I6AVg: $MM =& $this->mm; goto iZq8u; PF8ib: jNq96: goto Zzz5s; czGsm: $PRIM =& $this->prim; goto PE7Pk; Zzz5s: if (!($i < $NN - $NROOTS - $PAD)) { goto Afv8x; } goto T2pIT; mqWe8: $FCR =& $this->fcr; goto czGsm; rBBTu: if (!($feedback != $A0)) { goto aEFh9; } goto sVjbM; QIqHw: goto jNq96; goto icV3J; PC3f7: Em0FR: goto fMDdw; usdqp: $PAD =& $this->pad; goto vNSFp; erfDF: lIxpr: goto rlh8W; vNSFp: $A0 =& $NN; goto JorbK; SyA6Q: aEFh9: goto rbLrf; kIExr: pARE2: goto ys2b0; iZq8u: $NN =& $this->nn; goto AXT7G; sVjbM: $feedback = $this->modnn($NN - $GENPOLY[$NROOTS] + $feedback); goto irLy1; jOaQo: $NROOTS =& $this->nroots; goto mqWe8; COR9Q: if ($feedback != $A0) { goto pARE2; } goto lxGpJ; BFQd7: } } goto IIDi9; cUo5v: define("\121\122\x5f\x44\x45\106\x41\x55\x4c\x54\x5f\x4d\x41\123\113", 2); goto tcyGn; Y1vuq: define("\x51\x52\137\105\x43\114\x45\x56\105\114\137\x48", 3); goto es2Fa; QPOrl: class qrstr { public static function set(&$srctab, $x, $y, $repl, $replLen = false) { $srctab[$y] = substr_replace($srctab[$y], $replLen !== false ? substr($repl, 0, $replLen) : $repl, $x, $replLen !== false ? $replLen : strlen($repl)); } } goto w18vH; u9L07: define("\121\122\x5f\x4d\117\104\105\x5f\x53\124\122\x55\x43\124\125\x52\x45", 4); goto F9ZGQ; LYAHs: QRtools::markTime("\163\x74\141\x72\x74"); goto Vd6fw; ZDU_t: define("\x51\x52\x5f\x46\x4f\x52\115\101\124\137\120\116\107", 1); goto QPOrl; tcyGn: define("\x51\122\137\120\116\x47\137\115\x41\130\111\x4d\x55\x4d\x5f\123\111\x5a\105", 1024); goto Rw4_M; IIDi9: class QRrs { public static $items = array(); public static function init_rs($symsize, $gfpoly, $fcr, $prim, $nroots, $pad) { goto Hr7_d; ctM36: $rs = QRrsItem::init_rs_char($symsize, $gfpoly, $fcr, $prim, $nroots, $pad); goto Y03Id; Y03Id: array_unshift(self::$items, $rs); goto k6cYn; Hr7_d: foreach (self::$items as $rs) { goto g8nUj; h01u2: na14m: goto tTses; ncKna: cZZoy: goto R90Yg; JDLBm: cOyDO: goto tdF1M; oSEqb: goto X0wPV; goto h01u2; rjjyZ: ZPdAJ: goto GwjJr; u2iNv: if (!($rs->mm != $symsize)) { goto na14m; } goto oSEqb; R90Yg: if (!($rs->prim != $prim)) { goto cOyDO; } goto uX86C; uunib: if (!($rs->fcr != $fcr)) { goto cZZoy; } goto n3hVl; tTses: if (!($rs->gfpoly != $gfpoly)) { goto YH70S; } goto zlz5L; A0cFj: X0wPV: goto zd8c_; ah76g: YH70S: goto uunib; GwjJr: if (!($rs->nroots != $nroots)) { goto rv1Nh; } goto xpgGN; CQYNA: rv1Nh: goto u2iNv; zlz5L: goto X0wPV; goto ah76g; n3hVl: goto X0wPV; goto ncKna; g8nUj: if (!($rs->pad != $pad)) { goto ZPdAJ; } goto jpxZS; jpxZS: goto X0wPV; goto rjjyZ; xpgGN: goto X0wPV; goto CQYNA; uX86C: goto X0wPV; goto JDLBm; tdF1M: return $rs; goto A0cFj; zd8c_: } goto e9m2S; e9m2S: kya4D: goto ctM36; k6cYn: return $rs; goto o9FC4; o9FC4: } } goto dz8z4; r0lwD: define("\121\x52\x5f\x4d\x4f\104\105\137\70", 2); goto sFMXh; Sdi_f: class QRmask { public $runLength = array(); public function __construct() { $this->runLength = array_fill(0, QRSPEC_WIDTH_MAX + 1, 0); } public function writeFormatInformation($width, &$frame, $mask, $level) { goto jrENY; AMp_Y: goto RjBLQ; goto x13st; IUu0o: $v = 0x84; goto AMp_Y; MO5Bn: $i++; goto SYt8T; Ynb2a: if ($i == 0) { goto G31XG; } goto T6V08; Cq61D: $frame[8][7] = chr($v); goto qvjZm; jrENY: $blacks = 0; goto b3sv8; bFR03: goto geuIB; goto ifQAD; ig6V4: $i++; goto gqBHj; Lxg1s: $format = $format >> 1; goto OWcVe; Ajbq2: goto XxQ4A; goto oPXpr; XcAuF: $i = 0; goto hwm6P; DCO2G: AWW1p: goto b0n3W; b0n3W: return $blacks; goto MMrqB; gqBHj: goto O4YGw; goto DCO2G; DF8jR: Bb4ZC: goto ig6V4; R9Zoe: $frame[$width - 7 + $i][8] = chr($v); goto Ynb2a; IFxpZ: $blacks += 2; goto qYolO; z_Zj0: if (!($i < 7)) { goto AWW1p; } goto pdrrg; TgE3K: C3dfz: goto Lxg1s; T6V08: $frame[8][6 - $i] = chr($v); goto bFR03; D6c5Y: $v = 0x84; goto Ajbq2; OWcVe: O3sYM: goto MO5Bn; pdrrg: if ($format & 1) { goto FZKjg; } goto D6c5Y; ijnwV: if ($format & 1) { goto rqqCj; } goto IUu0o; SYt8T: goto hWCr_; goto YQbjF; sU1jr: $frame[$i][8] = chr($v); goto TgE3K; ifQAD: G31XG: goto Cq61D; recNY: $blacks += 2; goto Fy52R; fBdLi: RjBLQ: goto z2bJ9; qvjZm: geuIB: goto IFdx4; pMmlP: XxQ4A: goto R9Zoe; Fy52R: $v = 0x85; goto fBdLi; oPXpr: FZKjg: goto IFxpZ; lCBYi: $i = 0; goto i_Kzo; QZbW_: goto C3dfz; goto mmZ2m; i_Kzo: hWCr_: goto j6fE_; b3sv8: $format = QRspec::getFormatInfo($mask, $level); goto lCBYi; z2bJ9: $frame[8][$width - 1 - $i] = chr($v); goto H2arS; H2arS: if ($i < 6) { goto k2g9Z; } goto hp7Tm; mmZ2m: k2g9Z: goto sU1jr; hp7Tm: $frame[$i + 1][8] = chr($v); goto QZbW_; YQbjF: q81Hz: goto XcAuF; hwm6P: O4YGw: goto z_Zj0; IFdx4: $format = $format >> 1; goto DF8jR; j6fE_: if (!($i < 8)) { goto q81Hz; } goto ijnwV; x13st: rqqCj: goto recNY; qYolO: $v = 0x85; goto pMmlP; MMrqB: } public function mask0($x, $y) { return $x + $y & 1; } public function mask1($x, $y) { return $y & 1; } public function mask2($x, $y) { return $x % 3; } public function mask3($x, $y) { return ($x + $y) % 3; } public function mask4($x, $y) { return (int) ($y / 2) + (int) ($x / 3) & 1; } public function mask5($x, $y) { return ($x * $y & 1) + $x * $y % 3; } public function mask6($x, $y) { return ($x * $y & 1) + $x * $y % 3 & 1; } public function mask7($x, $y) { return $x * $y % 3 + ($x + $y & 1) & 1; } private function generateMaskNo($maskNo, $width, $frame) { goto qDac8; QoprS: slhkJ: goto Jnl6B; xh3Bk: if (!($x < $width)) { goto UxgEa; } goto sUIxP; M9luj: if (!($y < $width)) { goto ncPxH; } goto yCt2l; mX6Cj: ncPxH: goto rIFwX; cDjs1: TNy3n: goto a9Imy; a9Imy: $y++; goto XItWZ; E8o41: $y = 0; goto EC6_V; sUIxP: if (ord($frame[$y][$x]) & 0x80) { goto slhkJ; } goto J18NI; ttxmu: UxgEa: goto cDjs1; qDac8: $bitMask = array_fill(0, $width, array_fill(0, $width, 0)); goto E8o41; xq5mT: Bfre8: goto pYcpx; rIFwX: return $bitMask; goto mVPKS; EC6_V: zU20H: goto M9luj; dvuis: U7h2u: goto xh3Bk; pYcpx: $x++; goto qzQ0l; orDH8: goto vFDYU; goto QoprS; HfEXM: vFDYU: goto xq5mT; Jnl6B: $bitMask[$y][$x] = 0; goto HfEXM; XItWZ: goto zU20H; goto mX6Cj; yCt2l: $x = 0; goto dvuis; qzQ0l: goto U7h2u; goto ttxmu; K_pAp: $bitMask[$y][$x] = $maskFunc == 0 ? 1 : 0; goto orDH8; J18NI: $maskFunc = call_user_func(array($this, "\155\141\163\x6b" . $maskNo), $x, $y); goto K_pAp; mVPKS: } public static function serial($bitFrame) { goto wn6lt; yOSzD: foreach ($bitFrame as $line) { $codeArr[] = join('', $line); VxVkO: } goto BWRKW; OTZAU: return gzcompress(join("\12", $codeArr), 9); goto SBcO6; wn6lt: $codeArr = array(); goto yOSzD; BWRKW: mVOgm: goto OTZAU; SBcO6: } public static function unserial($code) { goto bVsew; rJDfg: fk2Av: goto zcYHU; zcYHU: return $codeArr; goto Yxbsz; L6TOI: foreach ($codeLines as $line) { $codeArr[] = str_split($line); RNACp: } goto rJDfg; bVsew: $codeArr = array(); goto oXmlH; oXmlH: $codeLines = explode("\xa", gzuncompress($code)); goto L6TOI; Yxbsz: } public function makeMaskNo($maskNo, $width, $s, &$d, $maskGenOnly = false) { goto L38NT; nstsx: $d[$y][$x] = chr(ord($s[$y][$x]) ^ (int) $bitMask[$y][$x]); goto Q3QGd; yJOH3: if (!$maskGenOnly) { goto XspCd; } goto tD2oI; WFn9c: $d = $s; goto iCmcd; Nvsr6: goto gWXht; goto Z9SGo; QVemq: if (file_exists($fileName)) { goto xBeMm; } goto wfF31; pRgtY: file_put_contents($fileName, self::serial($bitMask)); goto u6Fcx; u6Fcx: goto JSLZk; goto cQJCo; tvrO6: $x++; goto MacKz; hfPWR: if (!($x < $width)) { goto DrQXD; } goto LW22u; SwReZ: KNW5P: goto QRHeu; j4f8x: $b += (int) (ord($d[$y][$x]) & 1); goto jV7k2; JHGar: JSLZk: goto ggUe8; t6CmN: VHhbo: goto hfPWR; dj2a4: return $b; goto rJGat; waUbW: if (QR_CACHEABLE) { goto sGoA4; } goto Okdb8; jV7k2: JV9l2: goto tvrO6; Okdb8: $bitMask = $this->generateMaskNo($maskNo, $width, $s, $d); goto nbM3k; Q39Jl: gWXht: goto lfgFx; iCmcd: $y = 0; goto Q39Jl; Q3QGd: EWABT: goto j4f8x; Z9SGo: OXfVe: goto dj2a4; k1r6A: $x = 0; goto t6CmN; w0ASb: sGoA4: goto QVemq; MacKz: goto VHhbo; goto AYbvg; nbM3k: goto o0G9Z; goto w0ASb; Rg1Hb: XspCd: goto WFn9c; cQJCo: xBeMm: goto JZzdm; eHujI: mkdir(QR_CACHE_DIR . "\x6d\141\x73\x6b\x5f" . $maskNo); goto kNXNW; tD2oI: return; goto Rg1Hb; L38NT: $b = 0; goto RVw71; LW22u: if (!($bitMask[$y][$x] == 1)) { goto EWABT; } goto nstsx; ggUe8: o0G9Z: goto yJOH3; wfF31: $bitMask = $this->generateMaskNo($maskNo, $width, $s, $d); goto hRPLs; QRHeu: $y++; goto Nvsr6; hRPLs: if (file_exists(QR_CACHE_DIR . "\155\x61\x73\x6b\137" . $maskNo)) { goto V7hIm; } goto eHujI; fcyY7: $fileName = QR_CACHE_DIR . "\x6d\141\163\x6b\x5f" . $maskNo . DIRECTORY_SEPARATOR . "\155\x61\x73\153\137" . $width . "\x5f" . $maskNo . "\x2e\144\x61\164"; goto waUbW; JZzdm: $bitMask = self::unserial(file_get_contents($fileName)); goto JHGar; lfgFx: if (!($y < $width)) { goto OXfVe; } goto k1r6A; RVw71: $bitMask = array(); goto fcyY7; kNXNW: V7hIm: goto pRgtY; AYbvg: DrQXD: goto SwReZ; rJGat: } public function makeMask($width, $frame, $maskNo, $level) { goto oleWv; MU7dw: $this->makeMaskNo($maskNo, $width, $frame, $masked); goto BhHea; HsqYd: return $masked; goto vzp4R; oleWv: $masked = array_fill(0, $width, str_repeat("\x0", $width)); goto MU7dw; BhHea: $this->writeFormatInformation($width, $masked, $maskNo, $level); goto HsqYd; vzp4R: } public function calcN1N3($length) { goto EvWey; r1FAJ: $demerit += N3; goto Geg8s; pBgX9: goto pUxdv; goto G5Zf7; aG8x3: if (!($this->runLength[$i - 2] == $fact && $this->runLength[$i - 1] == $fact && $this->runLength[$i + 1] == $fact && $this->runLength[$i + 2] == $fact)) { goto c2WqK; } goto nGWbp; KQR6K: llY15: goto oMe7L; sLkLt: if (!($this->runLength[$i] >= 5)) { goto llY15; } goto PQ2Eq; jXrNM: if (!($i < $length)) { goto EuAyQ; } goto sLkLt; KBbub: c2WqK: goto uZcVV; YJ5yD: bTltE: goto pBgX9; oMe7L: if (!($i & 1)) { goto XmSmf; } goto wqIoW; xizUQ: $demerit += N3; goto YJ5yD; nGWbp: if ($this->runLength[$i - 3] < 0 || $this->runLength[$i - 3] >= 4 * $fact) { goto hk108; } goto owlXt; y3ftJ: $fact = (int) ($this->runLength[$i] / 3); goto aG8x3; jJorg: return $demerit; goto CWN_5; CaH_0: XmSmf: goto Jel7v; AJrM6: $i++; goto gZWGd; EvWey: $demerit = 0; goto SKSa_; uZcVV: fwXKx: goto CaH_0; SKSa_: $i = 0; goto H5bzC; Geg8s: pUxdv: goto KBbub; H5bzC: bmb8q: goto jXrNM; owlXt: if (!($i + 3 >= $length || $this->runLength[$i + 3] >= 4 * $fact)) { goto bTltE; } goto xizUQ; pVYkP: EuAyQ: goto jJorg; PQ2Eq: $demerit += N1 + ($this->runLength[$i] - 5); goto KQR6K; Jel7v: zBUl3: goto AJrM6; wqIoW: if (!($i >= 3 && $i < $length - 2 && $this->runLength[$i] % 3 == 0)) { goto fwXKx; } goto y3ftJ; gZWGd: goto bmb8q; goto pVYkP; G5Zf7: hk108: goto r1FAJ; CWN_5: } public function evaluateSymbol($width, $frame) { goto zQF7E; fbUx8: $head++; goto H0DBp; wgL4F: $this->runLength[0] = 1; goto q5zZ_; iGNTd: B_lJ4: goto uIods; Pg4mG: $b22 = ord($frameY[$x]) & ord($frameY[$x - 1]) & ord($frameYM[$x]) & ord($frameYM[$x - 1]); goto Zkq0S; oxEap: $demerit = 0; goto JH9ht; gEy64: rlk60: goto diKRi; Q1xd3: if ((ord($frame[$y][$x]) ^ ord($frame[$y - 1][$x])) & 1) { goto gkeU7; } goto mrODq; zBR_I: $this->runLength[0] = -1; goto pWqBA; diKRi: if (!($y < $width)) { goto RVSsc; } goto p5SyJ; Uymyv: if (!(($b22 | $w22 ^ 1) & 1)) { goto sfhMu; } goto ivySJ; MT6n1: goto YSpet; goto L7uyr; OYzvM: $this->runLength[$head] = 1; goto NU4BG; wmmmP: Sui3U: goto OAxES; RHilW: if (!($x > 0)) { goto L7VzV; } goto zcTVl; LfMXO: $this->runLength[0] = -1; goto lwUxJ; KKToV: $this->runLength[$head] = 1; goto niKbD; oz4D9: rxG0k: goto LfMXO; LQY7R: $head = 0; goto wgL4F; i10Vg: $frameY = $frame[$y]; goto cxvaw; ivySJ: $demerit += N2; goto hLlx3; eGs8P: jjM62: goto tf5bH; PNOEW: if (!($y < $width)) { goto HzS8I; } goto lwZs_; cxvaw: if (!($y > 0)) { goto W1j6Y; } goto B5BbA; B5BbA: $frameYM = $frame[$y - 1]; goto Dd9Pn; J1v2S: $demerit += $this->calcN1N3($head + 1); goto kjdaL; iGCxb: zvgj9: goto PNOEW; KAJM9: goto rlk60; goto E__zT; Jh2_L: rM2SJ: goto pcQ4c; EErHp: LvYGF: goto fbUx8; RL4Nb: bav1I: goto tgRjF; c1TnQ: goto jjM62; goto iGNTd; tf5bH: if (!($x < $width)) { goto B_lJ4; } goto LQY7R; zcTVl: if ((ord($frameY[$x]) ^ ord($frameY[$x - 1])) & 1) { goto LvYGF; } goto d7nW3; OAxES: $x++; goto JfvAi; Zkq0S: $w22 = ord($frameY[$x]) | ord($frameY[$x - 1]) | ord($frameYM[$x]) | ord($frameYM[$x - 1]); goto Uymyv; i320l: $demerit += $this->calcN1N3($head + 1); goto Z76W6; f7Z_M: goto zvgj9; goto QR9gU; a5w09: goto bav1I; goto EErHp; H0DBp: $this->runLength[$head] = 1; goto RL4Nb; q5zZ_: $y = 0; goto iGCxb; mrODq: $this->runLength[$head]++; goto eX725; M6w5S: if (!($x > 0 && $y > 0)) { goto LVMq9; } goto Pg4mG; tgRjF: L7VzV: goto MT6n1; NU4BG: YSpet: goto wmmmP; u0Arv: $head++; goto Xtj_O; Dd9Pn: W1j6Y: goto u8eTg; lwZs_: if ($y == 0 && ord($frame[$y][$x]) & 1) { goto rxG0k; } goto LRdVr; JH9ht: $y = 0; goto gEy64; Ktj2I: if (!($x < $width)) { goto ahZnk; } goto M6w5S; u8eTg: $x = 0; goto tKMHo; r1kdG: gkeU7: goto u0Arv; A2Fdk: $x = 0; goto eGs8P; uN8RM: if ($x == 0 && ord($frameY[$x]) & 1) { goto M_BWu; } goto RHilW; jeCBe: xftVu: goto Jh2_L; zOSjF: $x++; goto c1TnQ; eX725: goto xftVu; goto r1kdG; QR9gU: HzS8I: goto J1v2S; niKbD: e38wN: goto UVumm; kjdaL: IbO1Q: goto zOSjF; L7uyr: M_BWu: goto zBR_I; Z76W6: hSf9t: goto wq0FL; lwUxJ: $head = 1; goto KKToV; tKMHo: UY0w2: goto Ktj2I; RsRcc: $y++; goto f7Z_M; yw1n6: LVMq9: goto uN8RM; E__zT: RVSsc: goto A2Fdk; Xtj_O: $this->runLength[$head] = 1; goto jeCBe; pWqBA: $head = 1; goto OYzvM; OL5o_: $this->runLength[0] = 1; goto i10Vg; LRdVr: if (!($y > 0)) { goto rM2SJ; } goto Q1xd3; uIods: return $demerit; goto taf1n; MSZBt: ahZnk: goto i320l; hLlx3: sfhMu: goto yw1n6; p5SyJ: $head = 0; goto OL5o_; JfvAi: goto UY0w2; goto MSZBt; UVumm: BRRSB: goto RsRcc; wq0FL: $y++; goto KAJM9; pcQ4c: goto e38wN; goto oz4D9; d7nW3: $this->runLength[$head]++; goto a5w09; zQF7E: $head = 0; goto oxEap; taf1n: } public function mask($width, $frame, $level) { goto rjZPf; f7alM: t_KVA: goto Xvs57; FD04p: g29zi: goto wZpwD; OQHsk: return $bestMask; goto CEfGV; mH5jx: $bestMaskNum = 0; goto iXbCW; aKyW0: foreach ($checked_masks as $i) { goto BRAOR; o_Txi: $demerit = 0; goto t16wo; g8qGh: $blacks = (int) (100 * $blacks / ($width * $width)); goto VKcbV; VKcbV: $demerit = (int) ((int) (abs($blacks - 50) / 5) * N4); goto DU7mP; zIA2E: $blacks = $this->makeMaskNo($i, $width, $frame, $mask); goto pPuPP; t16wo: $blacks = 0; goto zIA2E; kXpiT: Z1Uhv: goto V1pFw; D4WMz: $bestMask = $mask; goto hffvn; QGDAS: if (!($demerit < $minDemerit)) { goto Ta6yh; } goto oU45T; hffvn: $bestMaskNum = $i; goto XBiKC; XBiKC: Ta6yh: goto kXpiT; oU45T: $minDemerit = $demerit; goto D4WMz; DU7mP: $demerit += $this->evaluateSymbol($width, $mask); goto QGDAS; BRAOR: $mask = array_fill(0, $width, str_repeat("\0", $width)); goto o_Txi; pPuPP: $blacks += $this->writeFormatInformation($width, $mask, $i, $level); goto g8qGh; V1pFw: } goto Qa4Qc; ZM2YZ: $i++; goto Rcjlp; Rcjlp: goto g29zi; goto V3uIK; lQpw1: suw2y: goto ZM2YZ; mH_5H: $howManuOut = 8 - QR_FIND_FROM_RANDOM % 9; goto qAakV; kN2wl: unset($checked_masks[$remPos]); goto ZYveq; wZpwD: if (!($i < $howManuOut)) { goto IEeO9; } goto kmR9j; Xvs57: $bestMask = $frame; goto aKyW0; ZYveq: $checked_masks = array_values($checked_masks); goto lQpw1; V3uIK: IEeO9: goto f7alM; kmR9j: $remPos = rand(0, count($checked_masks) - 1); goto kN2wl; r1tjZ: if (!(QR_FIND_FROM_RANDOM !== false)) { goto t_KVA; } goto mH_5H; CTnD3: $checked_masks = array(0, 1, 2, 3, 4, 5, 6, 7); goto r1tjZ; qAakV: $i = 0; goto FD04p; Qa4Qc: ANrX1: goto OQHsk; rjZPf: $minDemerit = PHP_INT_MAX; goto mH5jx; iXbCW: $bestMask = array(); goto CTnD3; CEfGV: } } goto Ar6ZR; sFMXh: define("\x51\x52\137\x4d\x4f\104\x45\x5f\x4b\x41\116\112\111", 3); goto u9L07; es2Fa: define("\121\122\x5f\106\117\x52\x4d\101\124\x5f\124\105\x58\x54", 0); goto ZDU_t; ShvGG: define("\x4e\x33", 40); goto Ec3Ty; u_k8i: define("\121\x52\103\x41\120\137\127\x4f\122\x44\x53", 1); goto jnlRs; Vd6fw: define("\x51\x52\123\120\105\103\137\x56\x45\122\x53\111\117\116\x5f\115\x41\130", 40); goto VScOo; frCRW: class QRinput { public $items; private $version; private $level; public function __construct($version = 0, $level = QR_ECLEVEL_L) { goto OcIKh; aECux: QGE7w: goto CuOSF; CuOSF: $this->version = $version; goto k9C8l; sjAr0: throw new Exception("\x49\x6e\166\x61\x6c\x69\144\40\166\x65\162\163\x69\x6f\x6e\x20\x6e\x6f"); goto HDCUA; HDCUA: return NULL; goto aECux; OcIKh: if (!($version < 0 || $version > QRSPEC_VERSION_MAX || $level > QR_ECLEVEL_H)) { goto QGE7w; } goto sjAr0; k9C8l: $this->level = $level; goto csRYA; csRYA: } public function getVersion() { return $this->version; } public function setVersion($version) { goto YDpNn; LRUao: ar_gG: goto W_zAt; AWVSE: throw new Exception("\111\156\x76\x61\154\151\x64\x20\x76\x65\x72\x73\151\x6f\156\x20\156\157"); goto KcYBN; YDpNn: if (!($version < 0 || $version > QRSPEC_VERSION_MAX)) { goto ar_gG; } goto AWVSE; htnsz: return 0; goto BDE0s; KcYBN: return -1; goto LRUao; W_zAt: $this->version = $version; goto htnsz; BDE0s: } public function getErrorCorrectionLevel() { return $this->level; } public function setErrorCorrectionLevel($level) { goto o8G3k; Tcdc7: throw new Exception("\111\156\x76\141\154\151\144\40\x45\x43\114\x45\126\x45\114"); goto RTtb1; o8G3k: if (!($level > QR_ECLEVEL_H)) { goto Hdpwr; } goto Tcdc7; C6Kk0: Hdpwr: goto HI053; HI053: $this->level = $level; goto zLYDH; zLYDH: return 0; goto ecToT; RTtb1: return -1; goto C6Kk0; ecToT: } public function appendEntry(QRinputItem $entry) { $this->items[] = $entry; } public function append($mode, $size, $data) { try { goto ICz6n; FA7t3: return 0; goto RZ49a; ADXOv: $this->items[] = $entry; goto FA7t3; ICz6n: $entry = new QRinputItem($mode, $size, $data); goto ADXOv; RZ49a: } catch (Exception $e) { return -1; } } public function insertStructuredAppendHeader($size, $index, $parity) { goto FSw8N; reV3N: if (!($index <= 0 || $index > MAX_STRUCTURED_SYMBOLS)) { goto zW1d_; } goto kuSU0; bUjkT: zW1d_: goto EUlvv; BoOe6: throw new Exception("\x69\x6e\163\145\x72\164\123\x74\162\x75\143\x74\x75\x72\x65\144\x41\x70\x70\145\156\144\x48\145\x61\144\x65\162\x20\x77\162\x6f\x6e\x67\40\163\x69\172\x65"); goto GEMnZ; EUlvv: $buf = array($size, $index, $parity); goto Ww72z; FSw8N: if (!($size > MAX_STRUCTURED_SYMBOLS)) { goto ZCbpL; } goto BoOe6; GEMnZ: ZCbpL: goto reV3N; kuSU0: throw new Exception("\151\156\163\x65\x72\x74\x53\164\162\165\143\x74\165\162\x65\144\x41\x70\160\x65\156\144\110\x65\x61\x64\x65\162\40\x77\x72\157\156\x67\40\x69\156\x64\x65\170"); goto bUjkT; Ww72z: try { goto Rl3RE; zA232: return 0; goto gT3O8; EK9M6: array_unshift($this->items, $entry); goto zA232; Rl3RE: $entry = new QRinputItem(QR_MODE_STRUCTURE, 3, buf); goto EK9M6; gT3O8: } catch (Exception $e) { return -1; } goto p0jIu; p0jIu: } public function calcParity() { goto boCxk; zKsfS: PlPH5: goto dPPAh; VCs0m: foreach ($this->items as $item) { goto sbLv7; sbLv7: if (!($item->mode != QR_MODE_STRUCTURE)) { goto VWMjh; } goto gIyin; eO3Px: yJQdL: goto RQD5m; M40AM: CSuyd: goto rvZ1T; rvZ1T: if (!($i >= 0)) { goto KykG8; } goto lIrV3; lIrV3: $parity ^= $item->data[$i]; goto eO3Px; HOzU0: goto CSuyd; goto y39Xk; P2BYI: TCUs1: goto n1MJV; XCHz0: VWMjh: goto P2BYI; y39Xk: KykG8: goto XCHz0; gIyin: $i = $item->size - 1; goto M40AM; RQD5m: $i--; goto HOzU0; n1MJV: } goto zKsfS; dPPAh: return $parity; goto qjLZs; boCxk: $parity = 0; goto VCs0m; qjLZs: } public static function checkModeNum($size, $data) { goto JTCeF; XItGo: return true; goto i_aBZ; nFvNQ: if (!(ord($data[$i]) < ord("\60") || ord($data[$i]) > ord("\71"))) { goto MKTt1; } goto KbwH7; KbwH7: return false; goto kX7JW; PNFSM: if (!($i < $size)) { goto X58C4; } goto nFvNQ; PX1ld: $i++; goto WHbvx; S5Jlc: UIV0z: goto PNFSM; WHbvx: goto UIV0z; goto pZP9Q; pZP9Q: X58C4: goto XItGo; bXetI: VG3lu: goto PX1ld; kX7JW: MKTt1: goto bXetI; JTCeF: $i = 0; goto S5Jlc; i_aBZ: } public static function estimateBitsModeNum($size) { goto BVbFT; dP0sY: b5kGf: goto wnhGM; Z1LCE: $bits = $w * 10; goto kbS8c; wnhGM: uXesZ: goto Smezf; BVbFT: $w = (int) $size / 3; goto Z1LCE; kbS8c: switch ($size - $w * 3) { case 1: $bits += 4; goto uXesZ; case 2: $bits += 7; goto uXesZ; default: goto uXesZ; } goto dP0sY; Smezf: return $bits; goto uTCoD; uTCoD: } public static $anTable = array(-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 36, -1, -1, -1, 37, 38, -1, -1, -1, -1, 39, 40, -1, 41, 42, 43, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 44, -1, -1, -1, -1, -1, -1, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1); public static function lookAnTable($c) { return $c > 127 ? -1 : self::$anTable[$c]; } public static function checkModeAn($size, $data) { goto L1p5e; I3qMP: T72oJ: goto I_tKI; q4GJt: IfKOy: goto I3qMP; LR3Jw: FzC0K: goto Bcb4s; GLSkY: if (!($i < $size)) { goto FzC0K; } goto BQEf3; I_tKI: $i++; goto VXbwC; RGVjW: X2XoL: goto GLSkY; L1p5e: $i = 0; goto RGVjW; VXbwC: goto X2XoL; goto LR3Jw; zvXhr: return false; goto q4GJt; BQEf3: if (!(self::lookAnTable(ord($data[$i])) == -1)) { goto IfKOy; } goto zvXhr; Bcb4s: return true; goto hmw1Z; hmw1Z: } public static function estimateBitsModeAn($size) { goto ui2D6; ui2D6: $w = (int) ($size / 2); goto X0Jgr; KTnK0: return $bits; goto F8zEy; X0Jgr: $bits = $w * 11; goto qbFiN; qbFiN: if (!($size & 1)) { goto hj0I_; } goto P9roo; enLYR: hj0I_: goto KTnK0; P9roo: $bits += 6; goto enLYR; F8zEy: } public static function estimateBitsMode8($size) { return $size * 8; } public function estimateBitsModeKanji($size) { return (int) ($size / 2 * 13); } public static function checkModeKanji($size, $data) { goto iJgkr; TCNjw: rJLVw: goto A2QAl; R6vG_: return false; goto TCNjw; MHJ_6: return false; goto w7ri_; GtIRZ: $val = ord($data[$i]) << 8 | ord($data[$i + 1]); goto wq8kS; M_TTX: if (!($i < $size)) { goto eBwHr; } goto GtIRZ; jBcE6: goto iJxkQ; goto XZ8P0; A2QAl: Czd01: goto JXAeN; ZVwGh: $i = 0; goto o8ZVf; n5TP0: return true; goto rbz81; wq8kS: if (!($val < 0x8140 || $val > 0x9ffc && $val < 0xe040 || $val > 0xebbf)) { goto rJLVw; } goto R6vG_; w7ri_: GQ8km: goto ZVwGh; XZ8P0: eBwHr: goto n5TP0; iJgkr: if (!($size & 1)) { goto GQ8km; } goto MHJ_6; o8ZVf: iJxkQ: goto M_TTX; JXAeN: $i += 2; goto jBcE6; rbz81: } public static function check($mode, $size, $data) { goto lUWJt; pvar0: return false; goto ee2Dm; x3fg9: return false; goto iMym7; oAh0j: rpW0t: goto f5SM1; lUWJt: if (!($size <= 0)) { goto iS0sd; } goto pvar0; wHaFF: switch ($mode) { case QR_MODE_NUM: return self::checkModeNum($size, $data); goto GbZsl; case QR_MODE_AN: return self::checkModeAn($size, $data); goto GbZsl; case QR_MODE_KANJI: return self::checkModeKanji($size, $data); goto GbZsl; case QR_MODE_8: return true; goto GbZsl; case QR_MODE_STRUCTURE: return true; goto GbZsl; default: goto GbZsl; } goto oAh0j; f5SM1: GbZsl: goto x3fg9; ee2Dm: iS0sd: goto wHaFF; iMym7: } public function estimateBitStreamSize($version) { goto z_5oy; GfXvj: Ex1UC: goto wrdCw; Y84Hw: foreach ($this->items as $item) { $bits += $item->estimateBitStreamSizeOfEntry($version); cXY6F: } goto GfXvj; z_5oy: $bits = 0; goto Y84Hw; wrdCw: return $bits; goto r9YnO; r9YnO: } public function estimateVersion() { goto BXXWA; LfJPx: onDvI: goto gjpKF; Nnl2P: if (!($version < 0)) { goto onDvI; } goto VEQ6q; gjpKF: if ($version > $prev) { goto LLMIR; } goto jTnKB; DpNS3: LLMIR: goto WbXw6; WbXw6: $prev = $version; goto SZYkV; BXXWA: $version = 0; goto CgTv5; VEQ6q: return -1; goto LfJPx; jTnKB: gWyBk: goto QmFjf; QmFjf: return $version; goto aUhCK; SZYkV: $bits = $this->estimateBitStreamSize($prev); goto wU0CZ; CgTv5: $prev = 0; goto DpNS3; wU0CZ: $version = QRspec::getMinimumVersion((int) (($bits + 7) / 8), $this->level); goto Nnl2P; aUhCK: } public static function lengthOfCode($mode, $version, $bits) { goto ys3fY; m0m0y: $size = $maxsize; goto xOrCL; GbeW0: switch ($mode) { case QR_MODE_NUM: goto oHXZL; oHXZL: $chunks = (int) ($payload / 10); goto oUgoq; hNA0l: $size += 1; goto sFFfd; sFFfd: ZslIa: goto ivXX4; e9fio: if ($remain >= 7) { goto XT1ml; } goto Pg_vQ; EkqGV: XT1ml: goto MWaE7; vtS4E: goto voybY; goto KpsAV; uFv0F: TepFp: goto vtS4E; oUgoq: $remain = $payload - $chunks * 10; goto S6IQ0; Pg_vQ: if (!($remain >= 4)) { goto ZslIa; } goto hNA0l; ivXX4: goto TepFp; goto EkqGV; MWaE7: $size += 2; goto uFv0F; S6IQ0: $size = $chunks * 3; goto e9fio; KpsAV: case QR_MODE_AN: goto nKVKs; qJRYN: eD1b1: goto DmuKD; lqs0s: if (!($remain >= 6)) { goto eD1b1; } goto KFbaS; DmuKD: goto voybY; goto CpYkg; FlgwR: $remain = $payload - $chunks * 11; goto HvRmy; KFbaS: $size++; goto qJRYN; nKVKs: $chunks = (int) ($payload / 11); goto FlgwR; HvRmy: $size = $chunks * 2; goto lqs0s; CpYkg: case QR_MODE_8: $size = (int) ($payload / 8); goto voybY; case QR_MODE_KANJI: $size = (int) ($payload / 13 * 2); goto voybY; case QR_MODE_STRUCTURE: $size = (int) ($payload / 8); goto voybY; default: $size = 0; goto voybY; } goto OUBbb; JEjBQ: if (!($size > $maxsize)) { goto lSL5B; } goto m0m0y; ys3fY: $payload = $bits - 4 - QRspec::lengthIndicator($mode, $version); goto GbeW0; Xw0aP: return $size; goto s2iAF; xOrCL: lSL5B: goto Xw0aP; zV4Sk: if (!($size < 0)) { goto i9bEs; } goto myHW8; yulAh: $maxsize = QRspec::maximumWords($mode, $version); goto zV4Sk; OUBbb: QTpHO: goto c_nY8; ac_5_: i9bEs: goto JEjBQ; myHW8: $size = 0; goto ac_5_; c_nY8: voybY: goto yulAh; s2iAF: } public function createBitStream() { goto DotH0; b4YPg: Dt4og: goto snxcZ; G4Z0O: foreach ($this->items as $item) { goto GyX1x; GrpHP: Cjt6c: goto os6QG; xARUa: zdTvr: goto DVEKt; SR0IU: return -1; goto GrpHP; GyX1x: $bits = $item->encodeBitStream($this->version); goto wLXOw; wLXOw: if (!($bits < 0)) { goto Cjt6c; } goto SR0IU; os6QG: $total += $bits; goto xARUa; DVEKt: } goto b4YPg; snxcZ: return $total; goto b81Ua; DotH0: $total = 0; goto G4Z0O; b81Ua: } public function convertData() { goto dzV0p; CNLSX: goto LJn3l; goto qDtJn; TD_1y: aipwL: goto ese1c; o31IS: throw new Exception("\x57\x52\117\116\107\x20\126\x45\x52\123\111\117\116"); goto OQGlT; C7O1F: TzAc7: goto TD_1y; iCyvW: goto I5IEq; goto BV78F; dzV0p: $ver = $this->estimateVersion(); goto cN2VV; v6fpQ: F9NWF: goto g2SlD; Tig0i: $ver = QRspec::getMinimumVersion((int) (($bits + 7) / 8), $this->level); goto gWzhu; YDtrB: LJn3l: goto v6fpQ; qDtJn: tcsQJ: goto o31IS; OQGlT: return -1; goto YDtrB; cN2VV: if (!($ver > $this->getVersion())) { goto TzAc7; } goto SXtGN; g2SlD: goto aipwL; goto Ng8Wh; JHvzW: goto b1eHI; goto iCyvW; pgs76: if ($ver > $this->getVersion()) { goto peb62; } goto JHvzW; BV78F: peb62: goto f3Ucq; SXtGN: $this->setVersion($ver); goto C7O1F; ZX1nP: I5IEq: goto CNLSX; gWzhu: if ($ver < 0) { goto tcsQJ; } goto pgs76; mRGZU: OE393: goto Tig0i; VrTyO: if (!($bits < 0)) { goto OE393; } goto tXyRE; MrLnZ: return 0; goto q0FjH; tXyRE: return -1; goto mRGZU; Ng8Wh: b1eHI: goto MrLnZ; f3Ucq: $this->setVersion($ver); goto ZX1nP; ese1c: $bits = $this->createBitStream(); goto VrTyO; q0FjH: } public function appendPaddingBit(&$bstream) { goto DT97i; ggGNB: goto L75J9; goto tU1xJ; O6VGF: A4zXO: goto T0BYJ; DPbHv: return 0; goto AN2eH; DT97i: $bits = $bstream->size(); goto K1vtp; McAbl: if (!($maxbits - $bits < 5)) { goto yMEKE; } goto Lksx6; Lksx6: return $bstream->appendNum($maxbits - $bits, 0); goto iLLkV; gf8is: $maxbits = $maxwords * 8; goto w7uo_; UjhkI: $padding = new QRbitstream(); goto k3DdT; bPZ2k: L75J9: goto pnZp4; e8kJ0: $ret = $bstream->append($padding); goto qLz1p; sx23r: $padbuf[$i] = $i & 1 ? 0x11 : 0xec; goto O6VGF; JY8AK: $padbuf = array(); goto SNYvr; k3DdT: $ret = $padding->appendNum($words * 8 - $bits + 4, 0); goto mkJMO; K1vtp: $maxwords = QRspec::getDataLength($this->version, $this->level); goto gf8is; do6w2: Dpmwn: goto e8kJ0; AN2eH: gKmvg: goto McAbl; jft4H: JLZy9: goto do6w2; fcU2l: $words = (int) (($bits + 7) / 8); goto UjhkI; oEHD3: gETxE: goto PEv0Y; T0BYJ: $i++; goto ggGNB; pnZp4: if (!($i < $padlen)) { goto F89tS; } goto sx23r; qLz1p: return $ret; goto Rwaez; PEv0Y: $padlen = $maxwords - $words; goto bsPoS; bsPoS: if (!($padlen > 0)) { goto Dpmwn; } goto JY8AK; xi9Jk: return $ret; goto jft4H; w7uo_: if (!($maxbits == $bits)) { goto gKmvg; } goto DPbHv; MzXBX: $bits += 4; goto fcU2l; nDEGC: return $ret; goto oEHD3; tU1xJ: F89tS: goto zX9fM; XitZj: if (!($ret < 0)) { goto JLZy9; } goto xi9Jk; zX9fM: $ret = $padding->appendBytes($padlen, $padbuf); goto XitZj; mkJMO: if (!($ret < 0)) { goto gETxE; } goto nDEGC; iLLkV: yMEKE: goto MzXBX; SNYvr: $i = 0; goto bPZ2k; Rwaez: } public function mergeBitStream() { goto RBN2C; dVjnM: $bstream = new QRbitstream(); goto F7k_d; RBN2C: if (!($this->convertData() < 0)) { goto DrpA9; } goto pGgF_; qz2nz: return $bstream; goto BxSg9; pGgF_: return null; goto SriQ1; Fy_Yw: Bqe_a: goto qz2nz; SriQ1: DrpA9: goto dVjnM; F7k_d: foreach ($this->items as $item) { goto Q29kr; MCcxh: if (!($ret < 0)) { goto cWuVt; } goto QYp35; Q29kr: $ret = $bstream->append($item->bstream); goto MCcxh; QYp35: return null; goto pvUFg; pvUFg: cWuVt: goto BI1T_; BI1T_: rlRC_: goto tI7J9; tI7J9: } goto Fy_Yw; BxSg9: } public function getBitStream() { goto rCdAs; yQUZV: return null; goto bc5Bv; N5Ei5: $ret = $this->appendPaddingBit($bstream); goto Q27EP; nNlZd: return $bstream; goto T6uel; Lgz5z: I1gIi: goto N5Ei5; Q27EP: if (!($ret < 0)) { goto KSv8N; } goto yQUZV; wuBhU: return null; goto Lgz5z; hxM0h: if (!($bstream == null)) { goto I1gIi; } goto wuBhU; rCdAs: $bstream = $this->mergeBitStream(); goto hxM0h; bc5Bv: KSv8N: goto nNlZd; T6uel: } public function getByteStream() { goto Aiary; Aiary: $bstream = $this->getBitStream(); goto qF8LH; kfZ4E: JNWAE: goto CX8pB; JF6Mf: return null; goto kfZ4E; CX8pB: return $bstream->toByte(); goto DNPeO; qF8LH: if (!($bstream == null)) { goto JNWAE; } goto JF6Mf; DNPeO: } } goto toZ3n; Rw4_M: class QRtools { public static function binarize($frame) { goto GGin6; Pe8TS: WZfot: goto BBxER; BBxER: return $frame; goto SICCg; GGin6: $len = count($frame); goto mepyU; mepyU: foreach ($frame as &$frameLine) { goto bvmIX; FCI1q: keqNy: goto DM4PT; irCu2: rAaWT: goto Xnm3k; j6Kz5: $frameLine[$i] = ord($frameLine[$i]) & 1 ? "\x31" : "\x30"; goto FCI1q; uQBwF: goto rAaWT; goto cNZhG; bvmIX: $i = 0; goto irCu2; DM4PT: $i++; goto uQBwF; XdkWg: uaMMN: goto XKXoh; Xnm3k: if (!($i < $len)) { goto AIUup; } goto j6Kz5; cNZhG: AIUup: goto XdkWg; XKXoh: } goto Pe8TS; SICCg: } public static function tcpdfBarcodeArray($code, $mode = "\121\122\54\114", $tcPdfVersion = "\64\x2e\65\56\60\x33\x37") { goto uoA3t; vK9uT: $barcode_array["\x6e\165\x6d\137\x72\157\167\163"] = $size; goto we2gX; mJDQ1: ugFWZ: goto ndzvN; UXdT6: H9vBR: goto G4D_a; G4D_a: return $barcode_array; goto VFtze; lGdXd: foreach ($qrTab as $line) { goto F3EPF; vx2w5: foreach (str_split($line) as $char) { $arrAdd[] = $char == "\x31" ? 1 : 0; YLLe2: } goto xy5rW; W3q2y: $barcode_array["\x62\143\x6f\x64\x65"][] = $arrAdd; goto B1A43; F3EPF: $arrAdd = array(); goto vx2w5; xy5rW: Ii8im: goto W3q2y; B1A43: nKWoJ: goto PnW35; PnW35: } goto UXdT6; z31E5: $eccLevel = $mode[1]; goto EIlt1; uoA3t: $barcode_array = array(); goto xZGco; Taw1i: $size = count($qrTab); goto vK9uT; we2gX: $barcode_array["\156\x75\155\x5f\143\157\154\x73"] = $size; goto fp63y; xZGco: if (is_array($mode)) { goto ugFWZ; } goto OGZFE; OGZFE: $mode = explode("\x2c", $mode); goto mJDQ1; fp63y: $barcode_array["\x62\x63\157\144\x65"] = array(); goto lGdXd; ndzvN: $eccLevel = "\114"; goto txyrq; Jp29f: $qrTab = QRcode::text($code, false, $eccLevel); goto Taw1i; txyrq: if (!(count($mode) > 1)) { goto vW3Hn; } goto z31E5; EIlt1: vW3Hn: goto Jp29f; VFtze: } public static function clearCache() { self::$frames = array(); } public static function buildCache() { goto c5Ven; W9KtR: $maskNo = 0; goto oXecy; c5Ven: QRtools::markTime("\x62\x65\x66\157\162\145\137\x62\x75\151\154\x64\137\143\141\x63\150\145"); goto SVBek; NJHxY: $fileName = QR_CACHE_DIR . "\x66\x72\x61\155\145\x5f" . $a . "\x2e\x70\156\147"; goto cGb_l; a4ATB: $a = 1; goto b5lSh; mClfI: $a++; goto SXjsg; oXecy: Ylj2Y: goto ppVe2; gpuWK: $maskNo++; goto i18Ku; v3Dkt: $bitMask = array_fill(0, $width, array_fill(0, $width, 0)); goto W9KtR; bDdV3: kqx9J: goto fPvFn; tdUqk: $width = count($frame); goto v3Dkt; stJim: $mask->makeMaskNo($maskNo, $width, $frame, $bitMask, true); goto XGBcl; knlcG: dcoOk: goto NHhuW; vhmpM: if (!QR_IMAGE) { goto ABiQD; } goto NJHxY; i18Ku: goto Ylj2Y; goto bDdV3; SXjsg: goto A8rRk; goto knlcG; NHhuW: QRtools::markTime("\x61\146\x74\x65\x72\137\142\x75\151\x6c\x64\x5f\x63\141\143\150\145"); goto Lvjxr; ppVe2: if (!($maskNo < 8)) { goto kqx9J; } goto stJim; eMV3r: $frame = QRspec::newFrame($a); goto vhmpM; b5lSh: A8rRk: goto roQEa; cGb_l: QRimage::png(self::binarize($frame), $fileName, 1, 0); goto kXAV7; SVBek: $mask = new QRmask(); goto a4ATB; kXAV7: ABiQD: goto tdUqk; XGBcl: vvzgK: goto gpuWK; roQEa: if (!($a <= QRSPEC_VERSION_MAX)) { goto dcoOk; } goto eMV3r; fPvFn: eAj9D: goto mClfI; Lvjxr: } public static function log($outfile, $err) { goto jAK0q; NQtJp: goto epIBn; goto UxnyZ; rHNOH: file_put_contents(QR_LOG_DIR . basename($outfile) . "\x2d\145\x72\x72\x6f\162\163\x2e\164\170\164", date("\x59\55\x6d\55\144\x20\x48\72\151\x3a\x73") . "\x3a\40" . $err, FILE_APPEND); goto gJJNT; gJJNT: epIBn: goto jEH53; jAK0q: if (!(QR_LOG_DIR !== false)) { goto RhZZM; } goto QvjNh; QvjNh: if (!($err != '')) { goto HVGr7; } goto vFYmN; jEH53: HVGr7: goto tDuc9; t1Kx3: file_put_contents(QR_LOG_DIR . "\x65\x72\162\157\162\x73\56\x74\x78\x74", date("\x59\55\155\55\144\x20\110\x3a\151\72\x73") . "\x3a\x20" . $err, FILE_APPEND); goto NQtJp; UxnyZ: U8ts2: goto rHNOH; tDuc9: RhZZM: goto LfjTE; vFYmN: if ($outfile !== false) { goto U8ts2; } goto t1Kx3; LfjTE: } public static function dumpMask($frame) { goto jeQJl; UwBvN: $x = 0; goto BX11W; WjINK: ySF0Q: goto oebgD; Zou9_: vKD2k: goto eAG4c; jeQJl: $width = count($frame); goto ufzMt; aNTdH: qGM1B: goto XpYkz; BX11W: BkJvt: goto URmn_; f1LbZ: X0Tse: goto qkBzS; eAG4c: $y++; goto GJ1As; gQLOO: echo ord($frame[$y][$x]) . "\x2c"; goto WjINK; ufzMt: $y = 0; goto f1LbZ; sIcD2: sXHJO: goto Zou9_; URmn_: if (!($x < $width)) { goto sXHJO; } goto gQLOO; oebgD: $x++; goto vPGXt; qkBzS: if (!($y < $width)) { goto qGM1B; } goto UwBvN; GJ1As: goto X0Tse; goto aNTdH; vPGXt: goto BkJvt; goto sIcD2; XpYkz: } public static function markTime($markerId) { goto MIfBX; QdtFc: QFlEZ: goto xWo51; rLv0m: $time = (double) $usec + (double) $sec; goto GssES; GssES: if (isset($GLOBALS["\x71\x72\x5f\x74\151\x6d\x65\x5f\x62\x65\x6e\x63\x68"])) { goto QFlEZ; } goto tvWpH; xWo51: $GLOBALS["\x71\162\137\x74\x69\x6d\x65\x5f\x62\145\156\143\150"][$markerId] = $time; goto BivsF; tvWpH: $GLOBALS["\161\162\137\164\x69\x6d\145\x5f\x62\x65\156\143\x68"] = array(); goto QdtFc; MIfBX: list($usec, $sec) = explode("\x20", microtime()); goto rLv0m; BivsF: } public static function timeBenchmark() { goto H3gPm; H3gPm: self::markTime("\x66\x69\x6e\x69\x73\x68"); goto EoqgC; FCDo0: $startTime = 0; goto xLoEl; SPa18: echo "\74\x2f\164\142\x6f\x64\x79\x3e\74\164\x66\157\x6f\164\76\xd\xa\40\40\x20\40\x20\x20\x20\40\40\40\x20\x20\40\x20\40\40\74\164\x72\x20\x73\164\x79\154\145\75\42\x62\157\162\x64\145\x72\x2d\x74\x6f\x70\72\62\x70\x78\x20\x73\x6f\x6c\x69\144\x20\142\154\141\143\153\x22\76\74\164\150\x20\163\x74\x79\154\145\x3d\x22\164\145\170\164\x2d\141\x6c\x69\x67\x6e\x3a\162\151\147\150\164\42\76\x54\117\124\x41\x4c\x3a\x20\x3c\57\x74\150\x3e\x3c\164\x64\x3e" . number_format($lastTime - $startTime, 6) . "\x73\x3c\57\x74\x64\76\x3c\57\164\162\x3e\15\12\40\40\x20\x20\x20\40\x20\x20\x20\40\40\40\74\57\164\146\x6f\157\164\76\15\12\x20\x20\40\x20\40\40\40\x20\x20\x20\40\40\74\57\164\141\x62\154\x65\76"; goto nENwD; fitjJ: foreach ($GLOBALS["\x71\162\137\164\151\155\145\x5f\x62\145\x6e\143\x68"] as $markerId => $thisTime) { goto x3Sel; x3Sel: if ($p > 0) { goto pSDfD; } goto D9Yce; dQMUL: $p++; goto igbBD; D9Yce: $startTime = $thisTime; goto TM1Fj; igbBD: $lastTime = $thisTime; goto RjhgJ; z7VP_: pSDfD: goto jK31H; RjhgJ: FyXqJ: goto MVzwU; jK31H: echo "\74\x74\162\76\x3c\x74\x68\40\x73\164\171\154\x65\x3d\42\x74\145\x78\164\55\x61\154\151\x67\156\x3a\162\151\147\x68\164\42\x3e\164\151\x6c\x6c\40" . $markerId . "\72\40\x3c\57\x74\x68\76\x3c\x74\x64\76" . number_format($thisTime - $lastTime, 6) . "\x73\74\57\x74\144\x3e\x3c\x2f\x74\162\76"; goto UY2Tq; UY2Tq: sJRSj: goto dQMUL; TM1Fj: goto sJRSj; goto z7VP_; MVzwU: } goto d73OX; d73OX: oNSkf: goto SPa18; W5sef: echo "\x3c\x74\141\142\154\145\x20\143\145\154\154\160\x61\x64\x64\x69\x6e\x67\x3d\42\63\x22\x20\143\x65\154\154\x73\x70\141\143\151\156\147\75\42\x31\x22\x3e\xd\xa\x20\40\40\40\40\40\40\40\40\x20\x20\x20\x20\x20\40\40\40\40\x20\x20\x3c\x74\x68\x65\x61\144\x3e\x3c\x74\x72\40\x73\x74\x79\154\145\75\x22\142\x6f\x72\144\x65\162\x2d\x62\x6f\x74\x74\157\155\72\61\160\x78\x20\x73\157\154\151\x64\40\x73\151\x6c\x76\145\162\x22\x3e\74\164\x64\40\143\157\154\x73\160\141\x6e\75\x22\x32\42\x20\163\164\x79\154\x65\75\42\x74\145\x78\164\x2d\141\154\151\x67\156\72\x63\145\156\x74\145\162\42\76\x42\105\116\103\x48\x4d\x41\122\113\74\x2f\x74\x64\x3e\74\57\164\x72\76\x3c\x2f\164\x68\x65\141\144\x3e\xd\12\x20\40\x20\x20\40\40\x20\40\x20\x20\x20\x20\x20\40\40\40\40\x20\40\x20\x3c\164\x62\x6f\x64\171\76"; goto fitjJ; EoqgC: $lastTime = 0; goto FCDo0; xLoEl: $p = 0; goto W5sef; nENwD: } } goto LYAHs; Ar6ZR: class QRrsblock { public $dataLength; public $data = array(); public $eccLength; public $ecc = array(); public function __construct($dl, $data, $el, &$ecc, QRrsItem $rs) { goto XKjtl; xb6ON: $this->ecc = $ecc; goto dN2nq; U3V1v: $this->data = $data; goto OFyHe; rGdHx: $this->dataLength = $dl; goto U3V1v; XKjtl: $rs->encode_rs_char($data, $ecc); goto rGdHx; OFyHe: $this->eccLength = $el; goto xb6ON; dN2nq: } } goto EOlNG; nn5vP: define("\x51\x52\x5f\x4d\117\x44\x45\x5f\x4e\125\x4c", -1); goto D9xCT; VScOo: define("\121\122\x53\x50\x45\103\137\127\x49\104\124\110\x5f\x4d\x41\x58", 177); goto G13xF; w18vH: define("\121\122\x5f\x43\x41\103\110\105\x41\x42\114\x45", false); goto nAGvs; Y4m9G: class QRcode { public $version; public $width; public $data; public function encodeMask(QRinput $input, $mask) { goto tuqIu; buBTt: return NULL; goto wYNrR; fW6no: UQEsu: goto kVB6H; ysXuX: $filler->setFrameAt($addr, 0x2); goto mD6YP; xgg2r: $width = QRspec::getWidth($version); goto q4AAp; o07gm: goto LhzA6; goto xvWE2; RKeg_: QFuzB: goto OHJDG; hHe33: $i++; goto z9L3d; YFoPU: $this->version = $version; goto cVk9R; u5vjN: DwnMh: goto UNBRD; hC1IW: l4NR_: goto ZGxtE; k8G8p: if (!($masked == NULL)) { goto pMY5r; } goto MEdzE; pwiuq: LhzA6: goto RZP8r; dqzi0: $bit = $bit >> 1; goto RKeg_; equYI: $i = 0; goto V7fYz; PHsDY: YoNXY: goto k8G8p; KoBa7: $j = 0; goto TNMfA; z9L3d: goto Otpds; goto u5vjN; pbVbo: if (!($i < $j)) { goto DwnMh; } goto sOtEa; UtRz0: $code = $raw->getCode(); goto oSI26; xvWE2: j_Z0O: goto IMuW0; Bi_L0: QRtools::markTime("\x61\x66\x74\145\162\x5f\x6d\x61\x73\153"); goto YFoPU; KRezS: QRtools::markTime("\x61\146\164\145\162\137\162\141\x77"); goto F90QE; OHJDG: $j++; goto j4tFu; j4tFu: goto pyam3; goto fW6no; TNMfA: pyam3: goto AcowJ; MEdzE: return NULL; goto Un9ht; AkAnj: $masked = $maskObj->makeMask($width, $frame, $mask, $input->getErrorCorrectionLevel()); goto CDW2D; F90QE: $version = $raw->version; goto xgg2r; QXC2i: return $this; goto GXNls; ilS07: Izm_l: goto OHNEK; Un9ht: pMY5r: goto Bi_L0; O2v_T: $maskObj = new QRmask(); goto Lq3tz; AcowJ: if (!($j < 8)) { goto UQEsu; } goto xJA_D; H7AJZ: throw new Exception("\167\x72\157\156\147\40\x76\145\x72\163\x69\x6f\x6e"); goto Xk0rE; qxj3D: $this->data = $masked; goto QXC2i; GXhWH: if (QR_FIND_BEST_MASK) { goto l4NR_; } goto lzFLf; eMsyR: $filler = new FrameFiller($width, $frame); goto PLfD3; kVB6H: SZ3HX: goto Xnv6c; N8zma: $filler->setFrameAt($addr, 0x2 | ($bit & $code) != 0); goto dqzi0; lzFLf: $masked = $maskObj->makeMask($width, $frame, intval(QR_DEFAULT_MASK) % 8, $input->getErrorCorrectionLevel()); goto yL36p; tuqIu: if (!($input->getVersion() < 0 || $input->getVersion() > QRSPEC_VERSION_MAX)) { goto gDVEB; } goto H7AJZ; Xk0rE: gDVEB: goto GDK0j; cVk9R: $this->width = $width; goto qxj3D; a3A1B: unset($raw); goto XH2ZD; GDK0j: if (!($input->getErrorCorrectionLevel() > QR_ECLEVEL_H)) { goto Izm_l; } goto ldOfn; sOtEa: $addr = $filler->next(); goto ysXuX; CDW2D: goto YoNXY; goto WRkHl; OHNEK: $raw = new QRrawcode($input); goto KRezS; DNZVC: unset($filler); goto O2v_T; ldOfn: throw new Exception("\167\x72\157\x6e\x67\40\x6c\x65\x76\145\154"); goto ilS07; PLfD3: if (!is_null($filler)) { goto NQUkW; } goto buBTt; yL36p: goto rMXkK; goto hC1IW; wYNrR: NQUkW: goto ZJfZq; XH2ZD: $j = QRspec::getRemainder($version); goto equYI; xJA_D: $addr = $filler->next(); goto N8zma; jOyXV: rMXkK: goto PHsDY; oSI26: $bit = 0x80; goto KoBa7; V7fYz: Otpds: goto pbVbo; RZP8r: if (!($i < $raw->dataLength + $raw->eccLength)) { goto j_Z0O; } goto UtRz0; q4AAp: $frame = QRspec::newFrame($version); goto eMsyR; Xnv6c: $i++; goto o07gm; ZJfZq: $i = 0; goto pwiuq; mD6YP: Tzc3n: goto hHe33; Lq3tz: if ($mask < 0) { goto vAP6Y; } goto AkAnj; ZGxtE: $masked = $maskObj->mask($width, $frame, $input->getErrorCorrectionLevel()); goto jOyXV; WRkHl: vAP6Y: goto GXhWH; UNBRD: $frame = $filler->frame; goto DNZVC; IMuW0: QRtools::markTime("\141\146\x74\x65\162\137\146\151\154\x6c\145\x72"); goto a3A1B; GXNls: } public function encodeInput(QRinput $input) { return $this->encodeMask($input, -1); } public function encodeString8bit($string, $version, $level) { goto vTIGz; kWiNA: return NULL; goto Y5G6N; vE8cb: return NULL; goto FhJzf; BFyGU: if (!($input == NULL)) { goto cfOY4; } goto NIcWD; vjccW: $ret = $input->append($input, QR_MODE_8, strlen($string), str_split($string)); goto MFqV9; GchKH: $input = new QRinput($version, $level); goto BFyGU; DpNXD: cfOY4: goto vjccW; vTIGz: if (!(string == NULL)) { goto fBKvV; } goto AnFA8; MlTCl: return $this->encodeInput($input); goto nr84o; AnFA8: throw new Exception("\145\155\x70\x74\x79\40\x73\164\162\x69\x6e\147\x21"); goto vE8cb; JRPF1: unset($input); goto kWiNA; MFqV9: if (!($ret < 0)) { goto IkDoF; } goto JRPF1; Y5G6N: IkDoF: goto MlTCl; FhJzf: fBKvV: goto GchKH; NIcWD: return NULL; goto DpNXD; nr84o: } public function encodeString($string, $version, $level, $hint, $casesensitive) { goto M5b_D; eNaKE: if (!($ret < 0)) { goto yHyGU; } goto YAiJM; FcpJO: return NULL; goto YvK36; YvK36: cLcyu: goto vFjEn; HXvlX: if (!($input == NULL)) { goto Dw3kS; } goto w7MBq; Mny23: throw new Exception("\x62\141\144\40\150\x69\156\x74"); goto FcpJO; YAiJM: return NULL; goto WCe_g; vFjEn: $input = new QRinput($version, $level); goto HXvlX; M5b_D: if (!($hint != QR_MODE_8 && $hint != QR_MODE_KANJI)) { goto cLcyu; } goto Mny23; OYJBb: return $this->encodeInput($input); goto hDum6; WCe_g: yHyGU: goto OYJBb; GmrNr: $ret = QRsplit::splitStringToQRinput($string, $input, $hint, $casesensitive); goto eNaKE; w7MBq: return NULL; goto KLGPz; KLGPz: Dw3kS: goto GmrNr; hDum6: } public static function png($text, $outfile = false, $level = QR_ECLEVEL_L, $size = 3, $margin = 4, $saveandprint = false) { $enc = QRencode::factory($level, $size, $margin); return $enc->encodePNG($text, $outfile, $saveandprint = false); } public static function text($text, $outfile = false, $level = QR_ECLEVEL_L, $size = 3, $margin = 4) { $enc = QRencode::factory($level, $size, $margin); return $enc->encode($text, $outfile); } public static function raw($text, $outfile = false, $level = QR_ECLEVEL_L, $size = 3, $margin = 4) { $enc = QRencode::factory($level, $size, $margin); return $enc->encodeRAW($text, $outfile); } } goto KA_Bh; AW0Zq: define("\x51\x52\x5f\111\x4d\x41\107\105", true); goto KqldS; pDbsE: class QRspec { public static $capacity = array(array(0, 0, 0, array(0, 0, 0, 0)), array(21, 26, 0, array(7, 10, 13, 17)), array(25, 44, 7, array(10, 16, 22, 28)), array(29, 70, 7, array(15, 26, 36, 44)), array(33, 100, 7, array(20, 36, 52, 64)), array(37, 134, 7, array(26, 48, 72, 88)), array(41, 172, 7, array(36, 64, 96, 112)), array(45, 196, 0, array(40, 72, 108, 130)), array(49, 242, 0, array(48, 88, 132, 156)), array(53, 292, 0, array(60, 110, 160, 192)), array(57, 346, 0, array(72, 130, 192, 224)), array(61, 404, 0, array(80, 150, 224, 264)), array(65, 466, 0, array(96, 176, 260, 308)), array(69, 532, 0, array(104, 198, 288, 352)), array(73, 581, 3, array(120, 216, 320, 384)), array(77, 655, 3, array(132, 240, 360, 432)), array(81, 733, 3, array(144, 280, 408, 480)), array(85, 815, 3, array(168, 308, 448, 532)), array(89, 901, 3, array(180, 338, 504, 588)), array(93, 991, 3, array(196, 364, 546, 650)), array(97, 1085, 3, array(224, 416, 600, 700)), array(101, 1156, 4, array(224, 442, 644, 750)), array(105, 1258, 4, array(252, 476, 690, 816)), array(109, 1364, 4, array(270, 504, 750, 900)), array(113, 1474, 4, array(300, 560, 810, 960)), array(117, 1588, 4, array(312, 588, 870, 1050)), array(121, 1706, 4, array(336, 644, 952, 1110)), array(125, 1828, 4, array(360, 700, 1020, 1200)), array(129, 1921, 3, array(390, 728, 1050, 1260)), array(133, 2051, 3, array(420, 784, 1140, 1350)), array(137, 2185, 3, array(450, 812, 1200, 1440)), array(141, 2323, 3, array(480, 868, 1290, 1530)), array(145, 2465, 3, array(510, 924, 1350, 1620)), array(149, 2611, 3, array(540, 980, 1440, 1710)), array(153, 2761, 3, array(570, 1036, 1530, 1800)), array(157, 2876, 0, array(570, 1064, 1590, 1890)), array(161, 3034, 0, array(600, 1120, 1680, 1980)), array(165, 3196, 0, array(630, 1204, 1770, 2100)), array(169, 3362, 0, array(660, 1260, 1860, 2220)), array(173, 3532, 0, array(720, 1316, 1950, 2310)), array(177, 3706, 0, array(750, 1372, 2040, 2430))); public static function getDataLength($version, $level) { return self::$capacity[$version][QRCAP_WORDS] - self::$capacity[$version][QRCAP_EC][$level]; } public static function getECCLength($version, $level) { return self::$capacity[$version][QRCAP_EC][$level]; } public static function getWidth($version) { return self::$capacity[$version][QRCAP_WIDTH]; } public static function getRemainder($version) { return self::$capacity[$version][QRCAP_REMINDER]; } public static function getMinimumVersion($size, $level) { goto Uq5Fh; BRTPF: return $i; goto ynqX1; nLYJK: return -1; goto qc0ZG; cnwlN: m5tHv: goto q1v6B; q1v6B: $i++; goto wZQOf; pjBT5: if (!($words >= $size)) { goto WbMXW; } goto BRTPF; vW60Z: $words = self::$capacity[$i][QRCAP_WORDS] - self::$capacity[$i][QRCAP_EC][$level]; goto pjBT5; wZQOf: goto nJwb_; goto P8R7O; iCk0p: if (!($i <= QRSPEC_VERSION_MAX)) { goto uVhOf; } goto vW60Z; Uq5Fh: $i = 1; goto ePgEa; ePgEa: nJwb_: goto iCk0p; P8R7O: uVhOf: goto nLYJK; ynqX1: WbMXW: goto cnwlN; qc0ZG: } public static $lengthTableBits = array(array(10, 12, 14), array(9, 11, 13), array(8, 16, 16), array(8, 10, 12)); public static function lengthIndicator($mode, $version) { goto M1p6Y; mL_jt: return 0; goto O098R; zQnJ6: if ($version <= 9) { goto kZFAa; } goto ryQF4; M1p6Y: if (!($mode == QR_MODE_STRUCTURE)) { goto pcsR9; } goto mL_jt; QxXKk: $l = 0; goto CZxt0; YN2FZ: goto zUSWz; goto Rwxdf; WCyvd: return self::$lengthTableBits[$mode][$l]; goto ZzscX; vOPil: goto AGnEA; goto it5Ki; zyrO6: AGnEA: goto YN2FZ; ryQF4: if ($version <= 26) { goto Vy3QT; } goto s_tHA; CZxt0: zUSWz: goto WCyvd; s_tHA: $l = 2; goto vOPil; Rwxdf: kZFAa: goto QxXKk; O098R: pcsR9: goto zQnJ6; it5Ki: Vy3QT: goto UeJRL; UeJRL: $l = 1; goto zyrO6; ZzscX: } public static function maximumWords($mode, $version) { goto S0KcV; fJ_If: fFgk8: goto Aoa9f; ENkv1: $words = (1 << $bits) - 1; goto txj0r; O29QM: KWx5Q: goto KFm2z; wIQTO: return $words; goto o0lMJ; STQIj: $bits = self::$lengthTableBits[$mode][$l]; goto ENkv1; txj0r: if (!($mode == QR_MODE_KANJI)) { goto nBVs1; } goto eVG7V; ZzzAv: goto bEJwH; goto O29QM; eBqvm: if ($version <= 9) { goto fFgk8; } goto SbxPh; S8iy5: bEJwH: goto Tw_fU; p4zdp: nBVs1: goto wIQTO; Aoa9f: $l = 0; goto F2wme; ufVaD: return 3; goto nGTTH; KFm2z: $l = 1; goto S8iy5; Tw_fU: goto qhq3O; goto fJ_If; eVG7V: $words *= 2; goto p4zdp; jpRYo: $l = 2; goto ZzzAv; nGTTH: GnP76: goto eBqvm; S0KcV: if (!($mode == QR_MODE_STRUCTURE)) { goto GnP76; } goto ufVaD; SbxPh: if ($version <= 26) { goto KWx5Q; } goto jpRYo; F2wme: qhq3O: goto STQIj; o0lMJ: } public static $eccTable = array(array(array(0, 0), array(0, 0), array(0, 0), array(0, 0)), array(array(1, 0), array(1, 0), array(1, 0), array(1, 0)), array(array(1, 0), array(1, 0), array(1, 0), array(1, 0)), array(array(1, 0), array(1, 0), array(2, 0), array(2, 0)), array(array(1, 0), array(2, 0), array(2, 0), array(4, 0)), array(array(1, 0), array(2, 0), array(2, 2), array(2, 2)), array(array(2, 0), array(4, 0), array(4, 0), array(4, 0)), array(array(2, 0), array(4, 0), array(2, 4), array(4, 1)), array(array(2, 0), array(2, 2), array(4, 2), array(4, 2)), array(array(2, 0), array(3, 2), array(4, 4), array(4, 4)), array(array(2, 2), array(4, 1), array(6, 2), array(6, 2)), array(array(4, 0), array(1, 4), array(4, 4), array(3, 8)), array(array(2, 2), array(6, 2), array(4, 6), array(7, 4)), array(array(4, 0), array(8, 1), array(8, 4), array(12, 4)), array(array(3, 1), array(4, 5), array(11, 5), array(11, 5)), array(array(5, 1), array(5, 5), array(5, 7), array(11, 7)), array(array(5, 1), array(7, 3), array(15, 2), array(3, 13)), array(array(1, 5), array(10, 1), array(1, 15), array(2, 17)), array(array(5, 1), array(9, 4), array(17, 1), array(2, 19)), array(array(3, 4), array(3, 11), array(17, 4), array(9, 16)), array(array(3, 5), array(3, 13), array(15, 5), array(15, 10)), array(array(4, 4), array(17, 0), array(17, 6), array(19, 6)), array(array(2, 7), array(17, 0), array(7, 16), array(34, 0)), array(array(4, 5), array(4, 14), array(11, 14), array(16, 14)), array(array(6, 4), array(6, 14), array(11, 16), array(30, 2)), array(array(8, 4), array(8, 13), array(7, 22), array(22, 13)), array(array(10, 2), array(19, 4), array(28, 6), array(33, 4)), array(array(8, 4), array(22, 3), array(8, 26), array(12, 28)), array(array(3, 10), array(3, 23), array(4, 31), array(11, 31)), array(array(7, 7), array(21, 7), array(1, 37), array(19, 26)), array(array(5, 10), array(19, 10), array(15, 25), array(23, 25)), array(array(13, 3), array(2, 29), array(42, 1), array(23, 28)), array(array(17, 0), array(10, 23), array(10, 35), array(19, 35)), array(array(17, 1), array(14, 21), array(29, 19), array(11, 46)), array(array(13, 6), array(14, 23), array(44, 7), array(59, 1)), array(array(12, 7), array(12, 26), array(39, 14), array(22, 41)), array(array(6, 14), array(6, 34), array(46, 10), array(2, 64)), array(array(17, 4), array(29, 14), array(49, 10), array(24, 46)), array(array(4, 18), array(13, 32), array(48, 14), array(42, 32)), array(array(20, 4), array(40, 7), array(43, 22), array(10, 67)), array(array(19, 6), array(18, 31), array(34, 34), array(20, 61))); public static function getEccSpec($version, $level, array &$spec) { goto gAjlX; PTyBi: $b1 = self::$eccTable[$version][$level][0]; goto gAXPH; pl30T: $spec[0] = $b1; goto LaE5o; KzFm3: $ecc = self::getECCLength($version, $level); goto jpzi1; VYp_r: $spec[3] = $b2; goto dzJwB; bGyqv: $spec[3] = 0; goto HaEMP; jpzi1: if ($b2 == 0) { goto WStdr; } goto xf9jd; dQTom: $spec[2] = (int) ($ecc / ($b1 + $b2)); goto VYp_r; g_AN2: YKWQ1: goto PTyBi; VEU9c: $data = self::getDataLength($version, $level); goto KzFm3; gAjlX: if (!(count($spec) < 5)) { goto YKWQ1; } goto xvZUj; FJR31: $spec[2] = (int) ($ecc / $b1); goto bGyqv; U9WM7: $spec[1] = (int) ($data / ($b1 + $b2)); goto dQTom; LaE5o: $spec[1] = (int) ($data / $b1); goto FJR31; gAXPH: $b2 = self::$eccTable[$version][$level][1]; goto VEU9c; owlLm: uRCVo: goto ntQMG; tsWCq: WStdr: goto pl30T; xf9jd: $spec[0] = $b1; goto U9WM7; xvZUj: $spec = array(0, 0, 0, 0, 0); goto g_AN2; csMA9: goto uRCVo; goto tsWCq; dzJwB: $spec[4] = $spec[1] + 1; goto csMA9; HaEMP: $spec[4] = 0; goto owlLm; ntQMG: } public static $alignmentPattern = array(array(0, 0), array(0, 0), array(18, 0), array(22, 0), array(26, 0), array(30, 0), array(34, 0), array(22, 38), array(24, 42), array(26, 46), array(28, 50), array(30, 54), array(32, 58), array(34, 62), array(26, 46), array(26, 48), array(26, 50), array(30, 54), array(30, 56), array(30, 58), array(34, 62), array(28, 50), array(26, 50), array(30, 54), array(28, 54), array(32, 58), array(30, 58), array(34, 62), array(26, 50), array(30, 54), array(26, 52), array(30, 56), array(34, 60), array(30, 58), array(34, 62), array(30, 54), array(24, 50), array(28, 54), array(32, 58), array(26, 54), array(30, 58)); public static function putAlignmentMarker(array &$frame, $ox, $oy) { goto twKid; Hwpqc: if (!($y < 5)) { goto GkO7N; } goto lTiZG; lTiZG: QRstr::set($frame, $xStart, $yStart + $y, $finder[$y]); goto fgktV; T_Ppu: GkO7N: goto tLQIb; mBYFI: $y++; goto lI7Xc; sa5Pb: $yStart = $oy - 2; goto SR00H; t0fzT: wNGp8: goto Hwpqc; hgU5H: $y = 0; goto t0fzT; twKid: $finder = array("\241\xa1\xa1\241\xa1", "\xa1\xa0\xa0\xa0\241", "\241\xa0\xa1\240\xa1", "\241\xa0\xa0\xa0\xa1", "\xa1\xa1\241\241\xa1"); goto sa5Pb; lI7Xc: goto wNGp8; goto T_Ppu; fgktV: LCXo7: goto mBYFI; SR00H: $xStart = $ox - 2; goto hgU5H; tLQIb: } public static function putAlignmentPattern($version, &$frame, $width) { goto x3s9P; w7oIU: if (!($w * $w - 3 == 1)) { goto zhjE0; } goto O0dwr; hHkLH: o_D2C: goto WF16D; wuwNI: if (!($x < $w - 1)) { goto ix_Qo; } goto ZtByy; ZYRav: $cx += $d; goto Kz06L; Gn96r: zhjE0: goto G_Lye; E0gU3: $y = 0; goto VHC2C; eCSZe: yeGax: goto wuwNI; rUSno: WB_0F: goto bgmmU; WF16D: $y++; goto Et3sA; DDnSz: ix_Qo: goto z07qT; rUZpl: lkIR3: goto N9BBB; AlfaO: $y = self::$alignmentPattern[$version][0]; goto Vhnhw; vvwhR: self::putAlignmentMarker($frame, $cx, 6); goto ZYRav; ZtByy: self::putAlignmentMarker($frame, $cx, $cy); goto G6qvF; d4Gp3: if ($d < 0) { goto dzXqI; } goto CG5EC; O0dwr: $x = self::$alignmentPattern[$version][0]; goto AlfaO; JAuAJ: $x = 1; goto rUSno; l8VQy: goto yeGax; goto DDnSz; x3s9P: if (!($version < 2)) { goto Y08Bl; } goto mFlc3; U09T3: if (!($y < $w - 1)) { goto VGPhg; } goto y2Alt; y2Alt: $cx = self::$alignmentPattern[$version][0]; goto mob7O; VrbTD: $w = 2; goto fWNK5; fWNK5: maHJe: goto w7oIU; mFlc3: return; goto cuw0g; VHC2C: DYhku: goto U09T3; Et3sA: goto DYhku; goto ganCr; NZwbU: $x++; goto B6D1i; B6D1i: goto WB_0F; goto rUZpl; wdE5m: self::putAlignmentMarker($frame, 6, $cx); goto vvwhR; mob7O: $x = 0; goto eCSZe; N9BBB: $cy = self::$alignmentPattern[$version][0]; goto E0gU3; Kz06L: fQ2b8: goto NZwbU; ym3v1: $d = self::$alignmentPattern[$version][1] - self::$alignmentPattern[$version][0]; goto d4Gp3; Vhnhw: self::putAlignmentMarker($frame, $x, $y); goto C5Uo5; CG5EC: $w = (int) (($width - self::$alignmentPattern[$version][0]) / $d + 2); goto HA8MH; G6qvF: $cx += $d; goto XD_D7; ganCr: VGPhg: goto vLXzM; cuw0g: Y08Bl: goto ym3v1; G_Lye: $cx = self::$alignmentPattern[$version][0]; goto JAuAJ; bgmmU: if (!($x < $w - 1)) { goto lkIR3; } goto wdE5m; JH4jz: dzXqI: goto VrbTD; RbfMb: $x++; goto l8VQy; HA8MH: goto maHJe; goto JH4jz; z07qT: $cy += $d; goto hHkLH; XD_D7: iGtkX: goto RbfMb; C5Uo5: return; goto Gn96r; vLXzM: } public static $versionPattern = array(0x7c94, 0x85bc, 0x9a99, 0xa4d3, 0xbbf6, 0xc762, 0xd847, 0xe60d, 0xf928, 0x10b78, 0x1145d, 0x12a17, 0x13532, 0x149a6, 0x15683, 0x168c9, 0x177ec, 0x18ec4, 0x191e1, 0x1afab, 0x1b08e, 0x1cc1a, 0x1d33f, 0x1ed75, 0x1f250, 0x209d5, 0x216f0, 0x228ba, 0x2379f, 0x24b0b, 0x2542e, 0x26a64, 0x27541, 0x28c69); public static function getVersionPattern($version) { goto G6Qzl; G6Qzl: if (!($version < 7 || $version > QRSPEC_VERSION_MAX)) { goto Dhvk3; } goto THq4l; mnliN: return self::$versionPattern[$version - 7]; goto bIo5T; THq4l: return 0; goto Snl3O; Snl3O: Dhvk3: goto mnliN; bIo5T: } public static $formatInfo = array(array(0x77c4, 0x72f3, 0x7daa, 0x789d, 0x662f, 0x6318, 0x6c41, 0x6976), array(0x5412, 0x5125, 0x5e7c, 0x5b4b, 0x45f9, 0x40ce, 0x4f97, 0x4aa0), array(0x355f, 0x3068, 0x3f31, 0x3a06, 0x24b4, 0x2183, 0x2eda, 0x2bed), array(0x1689, 0x13be, 0x1ce7, 0x19d0, 0x762, 0x255, 0xd0c, 0x83b)); public static function getFormatInfo($mask, $level) { goto zHtWB; twBB8: dmC66: goto BKjkD; gi1MK: BWze1: goto HL02r; BKjkD: if (!($level < 0 || $level > 3)) { goto BWze1; } goto SzFZW; bUbm4: return 0; goto twBB8; HL02r: return self::$formatInfo[$level][$mask]; goto dAUb_; zHtWB: if (!($mask < 0 || $mask > 7)) { goto dmC66; } goto bUbm4; SzFZW: return 0; goto gi1MK; dAUb_: } public static $frames = array(); public static function putFinderPattern(&$frame, $ox, $oy) { goto AN2Mf; mkXmh: BqPpM: goto RTUT0; Knjwv: if (!($y < 7)) { goto BqPpM; } goto kA7FV; K49yT: D4Onb: goto dqa_h; vRTGn: aJAPB: goto Knjwv; dqa_h: $y++; goto k7wMU; kA7FV: QRstr::set($frame, $ox, $oy + $y, $finder[$y]); goto K49yT; AN2Mf: $finder = array("\301\301\301\301\301\301\301", "\xc1\300\300\300\300\300\301", "\xc1\300\xc1\xc1\301\300\301", "\xc1\300\301\301\301\300\xc1", "\xc1\300\xc1\xc1\xc1\xc0\301", "\301\xc0\300\300\xc0\300\301", "\xc1\301\301\xc1\301\301\xc1"); goto IL5jN; k7wMU: goto aJAPB; goto mkXmh; IL5jN: $y = 0; goto vRTGn; RTUT0: } public static function createFrame($version) { goto Twcft; JyJSb: self::putFinderPattern($frame, 0, $width - 7); goto PXir_; B92pH: $frame[$y][7] = "\300"; goto hhzAG; DMPAe: if (!($y < 6)) { goto xD_tS; } goto quRE1; Vf64m: if (!($version >= 7)) { goto ICkgZ; } goto KReBN; V8_PV: QRstr::set($frame, 0, $width - 8, $setPattern); goto Lw78E; Mdg0I: LYWgQ: goto vOJbr; KReBN: $vinf = self::getVersionPattern($version); goto R7lI7; mPvL3: $i = 1; goto EITsd; Eml_a: ZiVGo: goto gWt3k; XjhWB: $y++; goto cdhhY; quRE1: $x = 0; goto ZbAbJ; Y5G3T: sgU8K: goto XjhWB; JQRXb: aZluo: goto WMuR7; Nsjru: return $frame; goto ZTl2j; cGsCd: $frame = array_fill(0, $width, $frameLine); goto XHZhn; HdZQl: ICkgZ: goto LLbFd; D9RgX: $y++; goto ttc3S; EITsd: Pz5Ph: goto DFH0Q; ccTBO: $frame[$width - 11 + $y][$x] = chr(0x88 | $v & 1); goto DZfVs; ksY_a: bNcE4: goto Mdg0I; R7lI7: $v = $vinf; goto NcSpS; LNU0A: $frame[$yOffset][8] = "\204"; goto NimkK; ewS_z: GCOel: goto DMPAe; hhzAG: $frame[$y][$width - 8] = "\xc0"; goto R9o41; F5F0X: $i++; goto UJZVc; moQ75: $x++; goto IDumZ; gzr34: $v = $vinf; goto wSGQF; Nzl62: QRstr::set($frame, $width - 8, 7, $setPattern); goto V8_PV; v3KwT: SMwSh: goto rwWtr; Twcft: $width = self::$capacity[$version][QRCAP_WIDTH]; goto h20Y6; zrjXa: QRstr::set($frame, 0, 7, $setPattern); goto Nzl62; FmBvP: if (!($y < 8)) { goto Av4fe; } goto uc4u2; quhUC: $y = 0; goto qYnBA; DFH0Q: if (!($i < $width - 15)) { goto R7mnn; } goto dV8Od; WMuR7: if (!($y < 3)) { goto SMwSh; } goto ccTBO; DZfVs: $v = $v >> 1; goto Y5G3T; yz48_: xD_tS: goto HdZQl; NimkK: Y00wY: goto D9RgX; rNSHC: self::putAlignmentPattern($version, $frame, $width); goto Vf64m; Rpqxk: R7mnn: goto rNSHC; RNE2w: QRstr::set($frame, 0, 8, $setPattern); goto kT3KN; IDumZ: goto dieQw; goto ksY_a; cdhhY: goto aZluo; goto v3KwT; ttc3S: $yOffset++; goto OtRap; XHZhn: self::putFinderPattern($frame, 0, 0); goto unqgP; ljZQM: goto GCOel; goto yz48_; tUNUO: if (!($x < 3)) { goto bNcE4; } goto Gks4f; unqgP: self::putFinderPattern($frame, $width - 7, 0); goto JyJSb; asR3A: $yOffset = $width - 8; goto D3E4B; UJZVc: goto Pz5Ph; goto Rpqxk; gWt3k: if (!($x < 6)) { goto r2y3P; } goto cdMty; qYnBA: X0Rfw: goto VmTmS; Wz4L_: ScO46: goto oduot; HWwHf: r2y3P: goto gzr34; LLbFd: $frame[$width - 8][8] = "\201"; goto Nsjru; rdfWB: N5PZX: goto Kc0Gb; GHoSQ: $v = $v >> 1; goto A10mz; oduot: $setPattern = str_repeat("\300", 8); goto zrjXa; h20Y6: $frameLine = str_repeat("\x0", $width); goto cGsCd; A10mz: mPTAk: goto moQ75; wSGQF: $y = 0; goto ewS_z; OtRap: goto Y8SN0; goto JE7X7; oDlGD: $x++; goto xG_q0; D3E4B: $y = 0; goto yJeYF; dV8Od: $frame[6][7 + $i] = chr(0x90 | $i & 1); goto K2Bu9; wo3PZ: $yOffset++; goto rdfWB; kT3KN: QRstr::set($frame, $width - 8, 8, $setPattern, 8); goto asR3A; JE7X7: Av4fe: goto mPvL3; NcSpS: $x = 0; goto Eml_a; cdMty: $y = 0; goto JQRXb; ZbAbJ: dieQw: goto tUNUO; A8fa8: FjvQb: goto F5F0X; Gks4f: $frame[$y][$x + ($width - 11)] = chr(0x88 | $v & 1); goto GHoSQ; vOJbr: $y++; goto ljZQM; Kc0Gb: $y++; goto cF7VS; uc4u2: $frame[$y][8] = "\x84"; goto LNU0A; rwWtr: m2Lbx: goto oDlGD; yJeYF: Y8SN0: goto FmBvP; PXir_: $yOffset = $width - 7; goto quhUC; VmTmS: if (!($y < 7)) { goto ScO46; } goto B92pH; K2Bu9: $frame[7 + $i][6] = chr(0x90 | $i & 1); goto A8fa8; cF7VS: goto X0Rfw; goto Wz4L_; Lw78E: $setPattern = str_repeat("\x84", 9); goto RNE2w; xG_q0: goto ZiVGo; goto HWwHf; R9o41: $frame[$yOffset][7] = "\300"; goto wo3PZ; ZTl2j: } public static function debug($frame, $binary_mode = false) { goto Uok5G; pQWPS: goto hRy1x; goto Bz9SA; sHH6u: foreach ($frame as &$frameLine) { goto kZ1gd; ScFHC: $frameLine = join("\74\x73\160\141\x6e\40\143\x6c\x61\x73\163\x3d\42\155\42\76\46\x23\71\66\61\x38\x3b\74\x2f\163\x70\x61\x6e\x3e", explode("\xc1", $frameLine)); goto nRbyz; gl1bt: $frameLine = join("\x3c\163\160\x61\x6e\40\x63\154\141\x73\163\x3d\42\x63\42\76\46\x23\x39\x37\61\x39\73\x3c\x2f\163\160\x61\x6e\76", explode("\221", $frameLine)); goto E9Efv; OhUeS: $frameLine = join("\x3c\163\x70\141\x6e\40\x63\x6c\141\x73\163\x3d\x22\x66\42\x3e\x26\x23\71\x36\x31\70\x3b\74\57\163\160\x61\156\x3e", explode("\x89", $frameLine)); goto aPG0k; UHKZR: $frameLine = join("\x3c\163\x70\x61\156\40\x63\x6c\141\163\163\75\x22\x63\42\76\46\x6e\x62\163\160\x3b\74\x2f\163\160\141\x6e\x3e", explode("\x90", $frameLine)); goto gl1bt; W9dKx: $frameLine = join("\74\x73\x70\141\156\40\143\154\x61\x73\163\75\x22\163\42\x3e\x26\x23\x39\66\67\60\73\x3c\x2f\163\x70\141\x6e\x3e", explode("\x85", $frameLine)); goto MfNZN; MfNZN: $frameLine = join("\74\x73\x70\141\x6e\40\x63\x6c\141\x73\163\75\42\170\42\x3e\x26\x23\71\x37\66\62\x3b\x3c\57\x73\160\x61\x6e\76", explode("\201", $frameLine)); goto UHKZR; E9Efv: $frameLine = join("\x3c\x73\160\141\156\40\x63\x6c\141\163\x73\75\x22\x66\42\76\x26\156\142\x73\160\x3b\x3c\x2f\163\x70\x61\x6e\76", explode("\210", $frameLine)); goto OhUeS; T410H: $frameLine = join("\74\163\x70\141\x6e\40\143\154\141\163\x73\75\42\160\42\76\46\43\71\66\61\70\73\74\x2f\163\160\x61\156\x3e", explode("\241", $frameLine)); goto P5dsJ; aPG0k: $frameLine = join("\x26\x23\71\x38\63\60\x3b", explode("\1", $frameLine)); goto UloNO; MPupk: Y8L3S: goto tYn1k; kZ1gd: $frameLine = join("\x3c\x73\x70\x61\156\40\x63\x6c\x61\x73\x73\x3d\42\x6d\42\76\x26\x6e\x62\163\x70\73\x3c\x2f\163\x70\141\156\x3e", explode("\xc0", $frameLine)); goto ScFHC; P5dsJ: $frameLine = join("\74\163\x70\x61\156\40\143\154\141\x73\x73\75\42\x73\x22\76\46\x23\x39\x36\x37\x31\x3b\74\x2f\x73\160\141\x6e\x3e", explode("\204", $frameLine)); goto W9dKx; UloNO: $frameLine = join("\46\43\x38\x39\x30\61\x3b", explode("\0", $frameLine)); goto MPupk; nRbyz: $frameLine = join("\x3c\163\x70\x61\x6e\40\143\154\141\163\163\75\x22\x70\x22\x3e\46\156\142\x73\160\73\x3c\57\163\160\x61\x6e\76", explode("\xa0", $frameLine)); goto T410H; tYn1k: } goto Oa9xl; U4M1M: ?>
                <style>
                    .p { background-color: yellow; }
                    .m { background-color: #00FF00; }
                    .s { background-color: #FF0000; }
                    .c { background-color: aqua; }
                    .x { background-color: pink; }
                    .f { background-color: gold; }
                </style>
                <?php  goto kzUzo; fGPzd: echo "\74\x2f\x74\164\x3e\74\x2f\160\x72\145\x3e"; goto pQWPS; OP9ix: foreach ($frame as &$frameLine) { goto aJQg2; Hl7Jf: h38s6: goto nmT2E; aJQg2: $frameLine = join("\74\163\160\x61\x6e\x20\x63\154\141\x73\163\x3d\42\x6d\x22\x3e\46\x6e\x62\x73\x70\73\x26\156\142\163\x70\73\x3c\57\163\160\141\x6e\76", explode("\x30", $frameLine)); goto rlHVb; rlHVb: $frameLine = join("\x26\x23\x39\x36\x30\x38\73\46\x23\x39\x36\60\x38\73", explode("\61", $frameLine)); goto Hl7Jf; nmT2E: } goto P85av; kzUzo: echo "\74\x70\162\x65\x3e\x3c\164\164\76"; goto caSFs; XsrF9: hRy1x: goto ejQAp; Uok5G: if ($binary_mode) { goto ZcTS1; } goto sHH6u; dMOhg: echo "\74\x2f\x74\164\x3e\x3c\57\160\162\145\x3e\x3c\x62\162\57\x20\x3e\74\x62\162\x2f\x20\x3e\x3c\x62\x72\57\x20\x3e\74\x62\x72\57\x20\76\74\142\162\x2f\40\x3e\74\x62\x72\x2f\x20\x3e"; goto XsrF9; P85av: Pck6C: goto TddHN; TddHN: ?>
                <style>
                    .m { background-color: white; }
                </style>
                <?php  goto RruwP; Oa9xl: qazfg: goto U4M1M; caSFs: echo join("\x3c\x62\162\x2f\x20\x3e", $frame); goto fGPzd; Cbnkg: echo join("\x3c\x62\x72\x2f\x20\x3e\x26\156\142\163\x70\73\x26\156\142\x73\x70\x3b\46\156\x62\x73\160\73\46\156\x62\x73\160\x3b\x26\156\x62\163\x70\73\46\156\142\163\160\73\x26\x6e\x62\163\160\73\x26\x6e\x62\163\x70\73", $frame); goto dMOhg; RruwP: echo "\x3c\x70\x72\145\76\x3c\x74\x74\x3e\x3c\x62\162\x2f\40\x3e\x3c\x62\162\x2f\x20\76\x3c\x62\x72\x2f\40\x3e\x26\156\142\163\x70\73\46\156\142\x73\x70\73\46\156\x62\163\160\x3b\x26\x6e\x62\163\160\x3b\x26\156\142\163\160\73\46\156\x62\163\160\x3b\x26\x6e\x62\163\160\73\46\156\x62\163\x70\73"; goto Cbnkg; Bz9SA: ZcTS1: goto OP9ix; ejQAp: } public static function serial($frame) { return gzcompress(join("\xa", $frame), 9); } public static function unserial($code) { return explode("\12", gzuncompress($code)); } public static function newFrame($version) { goto pWZFa; qHhk4: if (QR_CACHEABLE) { goto l07aE; } goto ofPA9; pWZFa: if (!($version < 1 || $version > QRSPEC_VERSION_MAX)) { goto orBUA; } goto TOnDk; hv5D_: v_t8r: goto LkmNT; LkmNT: CUC3g: goto ZJIZp; qJvFW: l07aE: goto Lhgz3; PhMdt: $fileName = QR_CACHE_DIR . "\x66\x72\x61\155\x65\x5f" . $version . "\56\x64\141\164"; goto qHhk4; EH68M: if (!is_null(self::$frames[$version])) { goto MY0bB; } goto A1cva; Wa8td: self::$frames[$version] = self::createFrame($version); goto vpbTU; A1cva: return null; goto RpkVb; D47v2: return self::$frames[$version]; goto r35xZ; ZJIZp: ojib6: goto EH68M; jB3Dq: goto CUC3g; goto qJvFW; vpbTU: file_put_contents($fileName, self::serial(self::$frames[$version])); goto pcM3l; pcM3l: goto v_t8r; goto ArX42; TOnDk: return null; goto k2GUT; ofPA9: self::$frames[$version] = self::createFrame($version); goto jB3Dq; QfqvV: if (isset(self::$frames[$version])) { goto ojib6; } goto PhMdt; RpkVb: MY0bB: goto D47v2; ArX42: pF6sy: goto wQOg_; Lhgz3: if (file_exists($fileName)) { goto pF6sy; } goto Wa8td; wQOg_: self::$frames[$version] = self::unserial(file_get_contents($fileName)); goto hv5D_; k2GUT: orBUA: goto QfqvV; r35xZ: } public static function rsBlockNum($spec) { return $spec[0] + $spec[3]; } public static function rsBlockNum1($spec) { return $spec[0]; } public static function rsDataCodes1($spec) { return $spec[1]; } public static function rsEccCodes1($spec) { return $spec[2]; } public static function rsBlockNum2($spec) { return $spec[3]; } public static function rsDataCodes2($spec) { return $spec[4]; } public static function rsEccCodes2($spec) { return $spec[2]; } public static function rsDataLength($spec) { return $spec[0] * $spec[1] + $spec[3] * $spec[4]; } public static function rsEccLength($spec) { return ($spec[0] + $spec[3]) * $spec[2]; } } goto AW0Zq; KA_Bh: class FrameFiller { public $width; public $frame; public $x; public $y; public $dir; public $bit; public function __construct($width, &$frame) { goto bG6cg; VB0TK: $this->frame = $frame; goto ceRjE; S_eQw: $this->dir = -1; goto UqRqq; bG6cg: $this->width = $width; goto VB0TK; ceRjE: $this->x = $width - 1; goto Vlc0t; UqRqq: $this->bit = -1; goto Yha01; Vlc0t: $this->y = $width - 1; goto S_eQw; Yha01: } public function setFrameAt($at, $val) { $this->frame[$at["\x79"]][$at["\170"]] = chr($val); } public function getFrameAt($at) { return ord($this->frame[$at["\171"]][$at["\x78"]]); } public function next() { goto Aggco; GeDMy: $x++; goto mXb_s; y99f3: $this->bit = 0; goto z1yfR; mXb_s: $y += $this->dir; goto NzOY3; NzOY3: $this->bit--; goto i5AeM; NDJzg: $this->dir = -1; goto xd3X0; AvHg1: $y = $this->y; goto E_lHi; O7N0d: $x--; goto mIco0; Wfoee: if ($this->dir < 0) { goto sL7eH; } goto m7I0l; XcWln: return array("\x78" => $x, "\171" => $y); goto Xz9ge; D8EgX: K2ZHe: goto b8KNe; PNJxw: v_I53: goto E52yd; tQgg6: APoCk: goto O7N0d; zACHg: $this->y = $y; goto lgHGh; wc162: sL7eH: goto yeLw4; m7I0l: if (!($y == $w)) { goto a40Nx; } goto M5Ryf; B2aoP: if (!($this->bit == -1)) { goto K2ZHe; } goto y99f3; rIpzu: $y = 9; goto cAfjs; dekBj: Sz7I4: goto Wfoee; CQ1v5: Ja5Xy: goto swZoh; GchlC: goto OSRmP; goto wc162; M5Ryf: $y = $w - 1; goto SYPdh; SYPdh: $x -= 2; goto NDJzg; RB3kr: $this->dir = 1; goto KO51P; K5DHN: $y = 0; goto OXUb6; OXUb6: $x -= 2; goto RB3kr; wNVuB: $x--; goto rIpzu; lQN05: if (!($x < 0 || $y < 0)) { goto zrkl8; } goto RqqoA; RqqoA: return null; goto najEv; swZoh: OSRmP: goto lQN05; KO51P: if (!($x == 6)) { goto ZupWO; } goto wNVuB; Aggco: cCabz: goto B2aoP; z1yfR: return array("\170" => $this->x, "\171" => $this->y); goto D8EgX; Kirgq: $x--; goto SjmZs; xd3X0: if (!($x == 6)) { goto v_I53; } goto Kirgq; oisoX: IToJi: goto XcWln; cAfjs: ZupWO: goto CQ1v5; b8KNe: $x = $this->x; goto AvHg1; lgHGh: if (ord($this->frame[$y][$x]) & 0x80) { goto cCabz; } goto oisoX; SjmZs: $y -= 8; goto PNJxw; i5AeM: goto Sz7I4; goto tQgg6; najEv: zrkl8: goto P1tLO; yeLw4: if (!($y < 0)) { goto Ja5Xy; } goto K5DHN; touT3: if ($this->bit == 0) { goto APoCk; } goto GeDMy; E_lHi: $w = $this->width; goto touT3; P1tLO: $this->x = $x; goto zACHg; mIco0: $this->bit++; goto dekBj; E52yd: a40Nx: goto GchlC; Xz9ge: } } goto yQONk; Ec3Ty: define("\116\x34", 10); goto Sdi_f; V3Tco: define("\121\x52\x5f\x46\111\116\104\137\x46\122\x4f\x4d\137\122\101\116\104\x4f\x4d", 2); goto cUo5v; nAGvs: define("\121\122\x5f\103\x41\103\x48\x45\137\104\x49\x52", false); goto bV52R; yQONk: class QRencode { public $casesensitive = true; public $eightbit = false; public $version = 0; public $size = 3; public $margin = 4; public $structured = 0; public $level = QR_ECLEVEL_L; public $hint = QR_MODE_8; public static function factory($level = QR_ECLEVEL_L, $size = 3, $margin = 4) { goto lDuvN; BwXcb: Xo6s5: goto A1rPF; iXinq: $enc->size = $size; goto VkM17; A1rPF: return $enc; goto av9hU; wcyj5: switch ($level . '') { case "\60": case "\x31": case "\62": case "\63": $enc->level = $level; goto Xo6s5; case "\154": case "\x4c": $enc->level = QR_ECLEVEL_L; goto Xo6s5; case "\155": case "\x4d": $enc->level = QR_ECLEVEL_M; goto Xo6s5; case "\x71": case "\121": $enc->level = QR_ECLEVEL_Q; goto Xo6s5; case "\x68": case "\110": $enc->level = QR_ECLEVEL_H; goto Xo6s5; } goto wZzbl; lDuvN: $enc = new QRencode(); goto iXinq; VkM17: $enc->margin = $margin; goto wcyj5; wZzbl: t4bsk: goto BwXcb; av9hU: } public function encodeRAW($intext, $outfile = false) { goto UvXTI; xyzae: goto RtrRF; goto lR4mS; Y7eOp: $code->encodeString8bit($intext, $this->version, $this->level); goto ooP20; lR4mS: iMkVr: goto Y7eOp; Rm6qB: $code->encodeString($intext, $this->version, $this->level, $this->hint, $this->casesensitive); goto xyzae; J60on: if ($this->eightbit) { goto iMkVr; } goto Rm6qB; ooP20: RtrRF: goto AYEu_; UvXTI: $code = new QRcode(); goto J60on; AYEu_: return $code->data; goto W_m7D; W_m7D: } public function encode($intext, $outfile = false) { goto BR1fG; BR1fG: $code = new QRcode(); goto zSCO7; EpxID: o2_K9: goto wrcKy; fF_GC: goto o2_K9; goto GQXnb; m9waI: QRtools::markTime("\x61\146\164\145\x72\x5f\x65\156\x63\157\x64\145"); goto b9vTO; dqfXt: $code->encodeString8bit($intext, $this->version, $this->level); goto r1NhG; XgI3s: $code->encodeString($intext, $this->version, $this->level, $this->hint, $this->casesensitive); goto oVg1f; oVg1f: goto Z2Go2; goto KHIi3; r1NhG: Z2Go2: goto m9waI; GQXnb: yI55u: goto ffoAD; b9vTO: if ($outfile !== false) { goto yI55u; } goto Vy0kt; Vy0kt: return QRtools::binarize($code->data); goto fF_GC; KHIi3: rXSmy: goto dqfXt; zSCO7: if ($this->eightbit) { goto rXSmy; } goto XgI3s; ffoAD: file_put_contents($outfile, join("\xa", QRtools::binarize($code->data))); goto EpxID; wrcKy: } public function encodePNG($intext, $outfile = false, $saveandprint = false) { try { goto TlqXe; R0jdX: if (!($err != '')) { goto c5yoa; } goto PzqGZ; DW1sO: $err = ob_get_contents(); goto xBfUI; uD98G: $tab = $this->encode($intext); goto DW1sO; vdZ1b: QRimage::png($tab, $outfile, min(max(1, $this->size), $maxSize), $this->margin, $saveandprint); goto a28ZA; ylnO5: $maxSize = (int) (QR_PNG_MAXIMUM_SIZE / (count($tab) + 2 * $this->margin)); goto vdZ1b; k2PiB: c5yoa: goto ylnO5; xBfUI: ob_end_clean(); goto R0jdX; TlqXe: ob_start(); goto uD98G; PzqGZ: QRtools::log($outfile, $err); goto k2PiB; a28ZA: } catch (Exception $e) { QRtools::log($outfile, $e->getMessage()); } } }